{"ast":null,"code":"import { CheckboxControlValueAccessor, NgControlStatus, NgModel, NumberValueAccessor, DefaultValueAccessor, SelectControlValueAccessor, NgSelectOption, ɵangular_packages_forms_forms_x, ɵangular_packages_forms_forms_y, NgControlStatusGroup, NgForm, NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { ɵɵgetCurrentView, ɵɵelementStart, ɵɵlistener, ɵɵrestoreView, ɵɵnextContext, ɵɵelementEnd, ɵɵtext, ɵɵadvance, ɵɵproperty, ɵɵdefineComponent, ɵɵProvidersFeature, ɵɵtemplate, ɵsetClassMetadata, Component, Input, ɵɵdefineInjectable, Injectable, ɵɵtextInterpolate1, ɵɵtextInterpolate, ɵɵelement, ɵɵpureFunction0, ɵɵpropertyInterpolate, ɵɵtextInterpolate2, ɵɵdirectiveInject, forwardRef, ɵɵpipe, ɵɵpipeBind1, ViewEncapsulation, ɵɵdefineNgModule, ɵɵdefineInjector, ɵɵsetNgModuleScope, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgIf, NgClass, NgForOf, JsonPipe, CommonModule } from '@angular/common';\nimport { BehaviorSubject } from 'rxjs';\nimport { MatTabGroup, MatTab, MatTabsModule } from '@angular/material/tabs';\nimport { MatButton, MatButtonModule } from '@angular/material/button';\nimport { MatIcon, MatIconModule } from '@angular/material/icon';\n\nfunction FieldJsonSchemaComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = ɵɵgetCurrentView();\n\n    ɵɵelementStart(0, \"div\");\n    ɵɵelementStart(1, \"div\");\n    ɵɵelementStart(2, \"div\", 1);\n    ɵɵelementStart(3, \"label\");\n    ɵɵelementStart(4, \"input\", 2);\n    ɵɵlistener(\"ngModelChange\", function FieldJsonSchemaComponent_div_0_Template_input_ngModelChange_4_listener($event) {\n      ɵɵrestoreView(_r8);\n      const ctx_r7 = ɵɵnextContext();\n      return ctx_r7.entity._disallowAdditional = $event;\n    });\n    ɵɵelementEnd();\n    ɵɵtext(5, \" Disallow Additipnal Properties\");\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementStart(6, \"div\", 3);\n    ɵɵelementStart(7, \"label\", 4);\n    ɵɵtext(8, \"minProperties:\");\n    ɵɵelementEnd();\n    ɵɵelementStart(9, \"input\", 5);\n    ɵɵlistener(\"ngModelChange\", function FieldJsonSchemaComponent_div_0_Template_input_ngModelChange_9_listener($event) {\n      ɵɵrestoreView(_r8);\n      const ctx_r9 = ɵɵnextContext();\n      return ctx_r9.entity._minProperties = $event;\n    });\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementStart(10, \"div\", 3);\n    ɵɵelementStart(11, \"label\", 4);\n    ɵɵtext(12, \"maxProperties:\");\n    ɵɵelementEnd();\n    ɵɵelementStart(13, \"input\", 5);\n    ɵɵlistener(\"ngModelChange\", function FieldJsonSchemaComponent_div_0_Template_input_ngModelChange_13_listener($event) {\n      ɵɵrestoreView(_r8);\n      const ctx_r10 = ɵɵnextContext();\n      return ctx_r10.entity._maxProperties = $event;\n    });\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵɵnextContext();\n    ɵɵadvance(4);\n    ɵɵproperty(\"ngModel\", ctx_r0.entity._disallowAdditional);\n    ɵɵadvance(5);\n    ɵɵproperty(\"ngModel\", ctx_r0.entity._minProperties);\n    ɵɵadvance(4);\n    ɵɵproperty(\"ngModel\", ctx_r0.entity._maxProperties);\n  }\n}\n\nfunction FieldJsonSchemaComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = ɵɵgetCurrentView();\n\n    ɵɵelementStart(0, \"div\");\n    ɵɵelementStart(1, \"div\", 3);\n    ɵɵelementStart(2, \"label\", 4);\n    ɵɵtext(3, \"minLength:\");\n    ɵɵelementEnd();\n    ɵɵelementStart(4, \"input\", 5);\n    ɵɵlistener(\"ngModelChange\", function FieldJsonSchemaComponent_div_1_Template_input_ngModelChange_4_listener($event) {\n      ɵɵrestoreView(_r12);\n      const ctx_r11 = ɵɵnextContext();\n      return ctx_r11.entity._minLength = $event;\n    });\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementStart(5, \"div\", 3);\n    ɵɵelementStart(6, \"label\", 4);\n    ɵɵtext(7, \"maxLength:\");\n    ɵɵelementEnd();\n    ɵɵelementStart(8, \"input\", 5);\n    ɵɵlistener(\"ngModelChange\", function FieldJsonSchemaComponent_div_1_Template_input_ngModelChange_8_listener($event) {\n      ɵɵrestoreView(_r12);\n      const ctx_r13 = ɵɵnextContext();\n      return ctx_r13.entity._maxLength = $event;\n    });\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementStart(9, \"div\", 3);\n    ɵɵelementStart(10, \"label\", 4);\n    ɵɵtext(11, \"Pattern:\");\n    ɵɵelementEnd();\n    ɵɵelementStart(12, \"input\", 6);\n    ɵɵlistener(\"ngModelChange\", function FieldJsonSchemaComponent_div_1_Template_input_ngModelChange_12_listener($event) {\n      ɵɵrestoreView(_r12);\n      const ctx_r14 = ɵɵnextContext();\n      return ctx_r14.entity._pattern = $event;\n    });\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementStart(13, \"div\", 3);\n    ɵɵelementStart(14, \"label\", 4);\n    ɵɵtext(15, \"Format:\");\n    ɵɵelementEnd();\n    ɵɵelementStart(16, \"select\", 7);\n    ɵɵlistener(\"ngModelChange\", function FieldJsonSchemaComponent_div_1_Template_select_ngModelChange_16_listener($event) {\n      ɵɵrestoreView(_r12);\n      const ctx_r15 = ɵɵnextContext();\n      return ctx_r15.entity._format = $event;\n    });\n    ɵɵelementStart(17, \"option\", 8);\n    ɵɵtext(18, \"--no-format--\");\n    ɵɵelementEnd();\n    ɵɵelementStart(19, \"option\", 9);\n    ɵɵtext(20, \"email\");\n    ɵɵelementEnd();\n    ɵɵelementStart(21, \"option\", 10);\n    ɵɵtext(22, \"hostname\");\n    ɵɵelementEnd();\n    ɵɵelementStart(23, \"option\", 11);\n    ɵɵtext(24, \"date-time\");\n    ɵɵelementEnd();\n    ɵɵelementStart(25, \"option\", 12);\n    ɵɵtext(26, \"ipv4\");\n    ɵɵelementEnd();\n    ɵɵelementStart(27, \"option\", 13);\n    ɵɵtext(28, \"ipv6\");\n    ɵɵelementEnd();\n    ɵɵelementStart(29, \"option\", 14);\n    ɵɵtext(30, \"uri\");\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementStart(31, \"div\", 3);\n    ɵɵelementStart(32, \"label\", 4);\n    ɵɵtext(33, \"Enum:\");\n    ɵɵelementEnd();\n    ɵɵelementStart(34, \"textarea\", 15);\n    ɵɵlistener(\"ngModelChange\", function FieldJsonSchemaComponent_div_1_Template_textarea_ngModelChange_34_listener($event) {\n      ɵɵrestoreView(_r12);\n      const ctx_r16 = ɵɵnextContext();\n      return ctx_r16.entity._enum = $event;\n    });\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵɵnextContext();\n    ɵɵadvance(4);\n    ɵɵproperty(\"ngModel\", ctx_r1.entity._minLength);\n    ɵɵadvance(4);\n    ɵɵproperty(\"ngModel\", ctx_r1.entity._maxLength);\n    ɵɵadvance(4);\n    ɵɵproperty(\"ngModel\", ctx_r1.entity._pattern);\n    ɵɵadvance(4);\n    ɵɵproperty(\"ngModel\", ctx_r1.entity._format);\n    ɵɵadvance(18);\n    ɵɵproperty(\"ngModel\", ctx_r1.entity._enum);\n  }\n}\n\nfunction FieldJsonSchemaComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = ɵɵgetCurrentView();\n\n    ɵɵelementStart(0, \"div\");\n    ɵɵelementStart(1, \"div\");\n    ɵɵelementStart(2, \"div\", 1);\n    ɵɵelementStart(3, \"label\");\n    ɵɵelementStart(4, \"input\", 2);\n    ɵɵlistener(\"ngModelChange\", function FieldJsonSchemaComponent_div_2_Template_input_ngModelChange_4_listener($event) {\n      ɵɵrestoreView(_r18);\n      const ctx_r17 = ɵɵnextContext();\n      return ctx_r17.entity._uniqueItems = $event;\n    });\n    ɵɵelementEnd();\n    ɵɵtext(5, \" Allow only unique items?\");\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementStart(6, \"div\", 3);\n    ɵɵelementStart(7, \"label\", 4);\n    ɵɵtext(8, \"minItems:\");\n    ɵɵelementEnd();\n    ɵɵelementStart(9, \"input\", 5);\n    ɵɵlistener(\"ngModelChange\", function FieldJsonSchemaComponent_div_2_Template_input_ngModelChange_9_listener($event) {\n      ɵɵrestoreView(_r18);\n      const ctx_r19 = ɵɵnextContext();\n      return ctx_r19.entity._minItems = $event;\n    });\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementStart(10, \"div\", 3);\n    ɵɵelementStart(11, \"label\", 4);\n    ɵɵtext(12, \"maxItems:\");\n    ɵɵelementEnd();\n    ɵɵelementStart(13, \"input\", 5);\n    ɵɵlistener(\"ngModelChange\", function FieldJsonSchemaComponent_div_2_Template_input_ngModelChange_13_listener($event) {\n      ɵɵrestoreView(_r18);\n      const ctx_r20 = ɵɵnextContext();\n      return ctx_r20.entity._maxItems = $event;\n    });\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵɵnextContext();\n    ɵɵadvance(4);\n    ɵɵproperty(\"ngModel\", ctx_r2.entity._uniqueItems);\n    ɵɵadvance(5);\n    ɵɵproperty(\"ngModel\", ctx_r2.entity._minItems);\n    ɵɵadvance(4);\n    ɵɵproperty(\"ngModel\", ctx_r2.entity._maxItems);\n  }\n}\n\nfunction FieldJsonSchemaComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = ɵɵgetCurrentView();\n\n    ɵɵelementStart(0, \"div\");\n    ɵɵelementStart(1, \"div\", 3);\n    ɵɵelementStart(2, \"label\", 4);\n    ɵɵtext(3, \"minimum:\");\n    ɵɵelementEnd();\n    ɵɵelementStart(4, \"input\", 16);\n    ɵɵlistener(\"ngModelChange\", function FieldJsonSchemaComponent_div_3_Template_input_ngModelChange_4_listener($event) {\n      ɵɵrestoreView(_r22);\n      const ctx_r21 = ɵɵnextContext();\n      return ctx_r21.entity._minimum = $event;\n    });\n    ɵɵelementEnd();\n    ɵɵelementStart(5, \"label\");\n    ɵɵelementStart(6, \"input\", 2);\n    ɵɵlistener(\"ngModelChange\", function FieldJsonSchemaComponent_div_3_Template_input_ngModelChange_6_listener($event) {\n      ɵɵrestoreView(_r22);\n      const ctx_r23 = ɵɵnextContext();\n      return ctx_r23.entity._exclusiveMinimum = $event;\n    });\n    ɵɵelementEnd();\n    ɵɵtext(7, \" Exclude minimum ?\");\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementStart(8, \"div\", 3);\n    ɵɵelementStart(9, \"label\", 4);\n    ɵɵtext(10, \"maximum:\");\n    ɵɵelementEnd();\n    ɵɵelementStart(11, \"input\", 16);\n    ɵɵlistener(\"ngModelChange\", function FieldJsonSchemaComponent_div_3_Template_input_ngModelChange_11_listener($event) {\n      ɵɵrestoreView(_r22);\n      const ctx_r24 = ɵɵnextContext();\n      return ctx_r24.entity._maximum = $event;\n    });\n    ɵɵelementEnd();\n    ɵɵelementStart(12, \"label\");\n    ɵɵelementStart(13, \"input\", 2);\n    ɵɵlistener(\"ngModelChange\", function FieldJsonSchemaComponent_div_3_Template_input_ngModelChange_13_listener($event) {\n      ɵɵrestoreView(_r22);\n      const ctx_r25 = ɵɵnextContext();\n      return ctx_r25.entity._exclusiveMaximum = $event;\n    });\n    ɵɵelementEnd();\n    ɵɵtext(14, \" Exclude maximum ?\");\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementStart(15, \"div\", 3);\n    ɵɵelementStart(16, \"label\", 4);\n    ɵɵtext(17, \"multipleOf:\");\n    ɵɵelementEnd();\n    ɵɵelementStart(18, \"input\", 16);\n    ɵɵlistener(\"ngModelChange\", function FieldJsonSchemaComponent_div_3_Template_input_ngModelChange_18_listener($event) {\n      ɵɵrestoreView(_r22);\n      const ctx_r26 = ɵɵnextContext();\n      return ctx_r26.entity._multipleOf = $event;\n    });\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementStart(19, \"div\", 3);\n    ɵɵelementStart(20, \"label\", 4);\n    ɵɵtext(21, \"Format:\");\n    ɵɵelementEnd();\n    ɵɵelementStart(22, \"select\", 7);\n    ɵɵlistener(\"ngModelChange\", function FieldJsonSchemaComponent_div_3_Template_select_ngModelChange_22_listener($event) {\n      ɵɵrestoreView(_r22);\n      const ctx_r27 = ɵɵnextContext();\n      return ctx_r27.entity._format = $event;\n    });\n    ɵɵelementStart(23, \"option\", 17);\n    ɵɵtext(24, \"int32\");\n    ɵɵelementEnd();\n    ɵɵelementStart(25, \"option\", 18);\n    ɵɵtext(26, \"int64\");\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementStart(27, \"div\", 3);\n    ɵɵelementStart(28, \"label\", 4);\n    ɵɵtext(29, \"Enum:\");\n    ɵɵelementEnd();\n    ɵɵelementStart(30, \"textarea\", 19);\n    ɵɵlistener(\"ngModelChange\", function FieldJsonSchemaComponent_div_3_Template_textarea_ngModelChange_30_listener($event) {\n      ɵɵrestoreView(_r22);\n      const ctx_r28 = ɵɵnextContext();\n      return ctx_r28.entity._enum = $event;\n    });\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵɵnextContext();\n    ɵɵadvance(4);\n    ɵɵproperty(\"ngModel\", ctx_r3.entity._minimum);\n    ɵɵadvance(2);\n    ɵɵproperty(\"ngModel\", ctx_r3.entity._exclusiveMinimum);\n    ɵɵadvance(5);\n    ɵɵproperty(\"ngModel\", ctx_r3.entity._maximum);\n    ɵɵadvance(2);\n    ɵɵproperty(\"ngModel\", ctx_r3.entity._exclusiveMaximum);\n    ɵɵadvance(5);\n    ɵɵproperty(\"ngModel\", ctx_r3.entity._multipleOf);\n    ɵɵadvance(4);\n    ɵɵproperty(\"ngModel\", ctx_r3.entity._format);\n    ɵɵadvance(8);\n    ɵɵproperty(\"ngModel\", ctx_r3.entity._enum);\n  }\n}\n\nfunction FieldJsonSchemaComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵɵelementStart(0, \"div\");\n    ɵɵtext(1, \" No validations for this type..\\n\");\n    ɵɵelementEnd();\n  }\n}\n\nfunction FieldJsonSchemaComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵɵelementStart(0, \"div\");\n    ɵɵtext(1, \" No validations for this type..\\n\");\n    ɵɵelementEnd();\n  }\n}\n\nfunction FieldJsonSchemaComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵɵelementStart(0, \"div\");\n    ɵɵtext(1, \" No validations for this type..\\n\");\n    ɵɵelementEnd();\n  }\n}\n\nlet FieldJsonSchemaComponent = /*#__PURE__*/(() => {\n  class FieldJsonSchemaComponent {\n    constructor() {\n      this.entity = {};\n    }\n\n  }\n\n  FieldJsonSchemaComponent.ɵfac = function FieldJsonSchemaComponent_Factory(t) {\n    return new (t || FieldJsonSchemaComponent)();\n  };\n\n  FieldJsonSchemaComponent.ɵcmp = ɵɵdefineComponent({\n    type: FieldJsonSchemaComponent,\n    selectors: [[\"ng-jsonschema-field\"]],\n    inputs: {\n      type: \"type\",\n      openMenu: \"openMenu\",\n      entity: \"entity\"\n    },\n    features: [ɵɵProvidersFeature([])],\n    decls: 7,\n    vars: 7,\n    consts: [[4, \"ngIf\"], [1, \"checkbox\", \"padding\"], [\"type\", \"checkbox\", 1, \"small\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-group\", \"col-xs-12\"], [1, \"model-label-x\"], [\"type\", \"number\", \"min\", \"0\", \"placeholder\", \">=0\", 1, \"form-control\", \"sm\", \"detail-ip\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"min\", \"0\", 1, \"form-control\", \"sm\", \"detail-ip\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-control\", \"sm\", \"detail-ip\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\"], [\"value\", \"email\"], [\"value\", \"hostname\"], [\"value\", \"date-time\"], [\"value\", \"ipv4\"], [\"value\", \"ipv6\"], [\"value\", \"uri\"], [\"placeholder\", \"'' abcd', 1 1.5,etc\", 1, \"form-control\", \"sm\", \"detail-ip\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"min\", \"0\", 1, \"form-control\", \"sm\", \"detail-ip\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"int32\"], [\"value\", \"int64\"], [\"placeholder\", \" abcd, 1,1.5,etc\", 1, \"form-control\", \"sm\", \"detail-ip\", 3, \"ngModel\", \"ngModelChange\"]],\n    template: function FieldJsonSchemaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵɵtemplate(0, FieldJsonSchemaComponent_div_0_Template, 14, 3, \"div\", 0);\n        ɵɵtemplate(1, FieldJsonSchemaComponent_div_1_Template, 35, 5, \"div\", 0);\n        ɵɵtemplate(2, FieldJsonSchemaComponent_div_2_Template, 14, 3, \"div\", 0);\n        ɵɵtemplate(3, FieldJsonSchemaComponent_div_3_Template, 31, 7, \"div\", 0);\n        ɵɵtemplate(4, FieldJsonSchemaComponent_div_4_Template, 2, 0, \"div\", 0);\n        ɵɵtemplate(5, FieldJsonSchemaComponent_div_5_Template, 2, 0, \"div\", 0);\n        ɵɵtemplate(6, FieldJsonSchemaComponent_div_6_Template, 2, 0, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        ɵɵproperty(\"ngIf\", ctx.type == \"Object\");\n        ɵɵadvance(1);\n        ɵɵproperty(\"ngIf\", ctx.type == \"String\");\n        ɵɵadvance(1);\n        ɵɵproperty(\"ngIf\", ctx.type == \"Array\");\n        ɵɵadvance(1);\n        ɵɵproperty(\"ngIf\", ctx.type == \"Integer\");\n        ɵɵadvance(1);\n        ɵɵproperty(\"ngIf\", ctx.type == \"Boolean\");\n        ɵɵadvance(1);\n        ɵɵproperty(\"ngIf\", ctx.type == \"Null\");\n        ɵɵadvance(1);\n        ɵɵproperty(\"ngIf\", ctx.type == \"refSchema\");\n      }\n    },\n    directives: [NgIf, CheckboxControlValueAccessor, NgControlStatus, NgModel, NumberValueAccessor, DefaultValueAccessor, SelectControlValueAccessor, NgSelectOption, ɵangular_packages_forms_forms_x],\n    encapsulation: 2\n  });\n  /*@__PURE__*/\n\n  return FieldJsonSchemaComponent;\n})();\n\n(function () {\n  void 0;\n})();\n\nclass JsonSchemaService {\n  constructor() {\n    this.xxxID = Math.random();\n    this.MODELS = {\n      Default: {\n        _key: '',\n        _title: '',\n        _description: '',\n        _$ref: '',\n        _default: '',\n        _enum: '',\n        _type: '',\n        _required: false,\n        __ID__: '',\n        _parent: '',\n        _hideKey: false\n      },\n      _id_: 0\n    };\n    this.additional = {\n      forObject: {\n        _properties: [],\n        _additionalProperties: [],\n        _disallowAdditional: false,\n        _maxProperties: undefined,\n        _minProperties: undefined,\n        _type: ['Object'],\n        _hasChild: true\n      },\n      forString: {\n        _format: '',\n        _pattern: undefined,\n        _maxLength: undefined,\n        _minLength: undefined,\n        _type: ['String']\n      },\n      forArray: {\n        _items: [],\n        _maxItems: undefined,\n        _minItems: undefined,\n        _uniqueItems: undefined,\n        _type: ['Array']\n      },\n      forInteger: {\n        _format: '',\n        _maximum: undefined,\n        _minimum: undefined,\n        _exclusiveMaximum: undefined,\n        _exclusiveMinimum: undefined,\n        _multipleOf: undefined,\n        _type: ['Integer']\n      },\n      forNumber: {\n        _format: '',\n        _maximum: undefined,\n        _minimum: undefined,\n        _exclusiveMaximum: undefined,\n        _exclusiveMinimum: undefined,\n        _multipleOf: undefined,\n        _type: ['Number']\n      },\n      for$ref: {\n        _type: ['$ref'],\n        _value: '',\n        _path: '#/definitions/'\n      },\n      forOneOf: {\n        _type: ['OneOf'],\n        _properties: [],\n        _hasChild: true\n      },\n      forAnyOf: {\n        _type: ['AnyOf'],\n        _properties: [],\n        _hasChild: true\n      },\n      forAllOf: {\n        _type: ['AllOf'],\n        _properties: [],\n        _hasChild: true\n      }\n    };\n    this.fields = this.additional;\n    /*MODELS.copyCommonProperties = function (newModel, oldModel) {\r\n        if (newModel === undefined || oldModel === undefined)\r\n            return newModel;\r\n        newModel._description = oldModel._description;\r\n        newModel._required = oldModel._required;\r\n        return newModel;\r\n    };*/\n  }\n\n  deepCopy(x) {\n    return JSON.parse(JSON.stringify(x));\n  }\n\n  newArray(key, parent) {\n    var newArr = Object.assign(Object.assign({}, this.MODELS.Default), this.deepCopy(this.additional.forArray));\n    this.MODELS._id_ += 1;\n    newArr.__ID__ = '$model' + this.MODELS._id_;\n    newArr._key = key;\n    newArr._parent = parent || '';\n    return newArr;\n  }\n\n  newBoolean(key, parent) {\n    var newBool = Object.assign(Object.assign({}, this.MODELS.Default), {\n      _type: ['Boolean']\n    });\n    this.MODELS._id_ += 1;\n    newBool.__ID__ = '$model' + this.MODELS._id_;\n    newBool._key = key;\n    newBool._parent = parent || '';\n    return newBool;\n  }\n\n  newInteger(key, parent) {\n    var newInt = Object.assign(Object.assign({}, this.MODELS.Default), this.deepCopy(this.additional.forInteger));\n    this.MODELS._id_ += 1;\n    newInt.__ID__ = '$model' + this.MODELS._id_;\n    newInt._key = key;\n    newInt._parent = parent || '';\n    return newInt;\n  }\n\n  newNumber(key, parent) {\n    var newNum = Object.assign(Object.assign({}, this.MODELS.Default), this.deepCopy(this.additional.forNumber));\n    this.MODELS._id_ += 1;\n    newNum.__ID__ = '$model' + this.MODELS._id_;\n    newNum._key = key;\n    newNum._parent = parent || '';\n    return newNum;\n  }\n\n  newNull(key, parent) {\n    var newNull = Object.assign(Object.assign({}, this.MODELS.Default), {\n      _type: ['Null']\n    });\n    this.MODELS._id_ += 1;\n    newNull.__ID__ = '$model' + this.MODELS._id_;\n    newNull._key = key;\n    newNull._parent = parent || '';\n    return newNull;\n  }\n\n  newObject(key, props = null, parent) {\n    var newObj = Object.assign(Object.assign({}, this.MODELS.Default), this.deepCopy(this.additional.forObject));\n    this.MODELS._id_ += 1;\n    newObj.__ID__ = '$model' + this.MODELS._id_;\n    newObj._key = key;\n\n    if (props) {\n      newObj._properties = props;\n    }\n\n    newObj._parent = parent || '';\n    return newObj;\n  }\n\n  newString(key, required, parent) {\n    var newStr = Object.assign(Object.assign({}, this.MODELS.Default), this.deepCopy(this.additional.forString));\n\n    if (required) {\n      newStr._required = true;\n    }\n\n    this.MODELS._id_ += 1;\n    newStr.__ID__ = '$model' + this.MODELS._id_;\n    newStr._key = key;\n    newStr._parent = parent || '';\n    return newStr;\n  }\n\n  new$ref(key, value, parent, path) {\n    var newRef = Object.assign({}, this.deepCopy(this.additional.for$ref));\n    if (path) newRef._path = path;\n    this.MODELS._id_ += 1;\n    newRef.__ID__ = '$model' + this.MODELS._id_;\n    newRef._key = key;\n    newRef._value = value;\n    newRef._parent = parent || '';\n    return newRef;\n  }\n\n  newXOf(type, key, props, parent) {\n    var newXOf = Object.assign(Object.assign({}, this.MODELS.Default), this.deepCopy(this.additional['for' + type]));\n    this.MODELS._id_ += 1;\n    newXOf.__ID__ = '$model' + this.MODELS._id_;\n    newXOf._key = key;\n\n    if (props) {\n      newXOf._properties = props;\n    }\n\n    newXOf._parent = parent || '';\n    return newXOf;\n  }\n\n  copy(data) {\n    if (data) return JSON.parse(JSON.stringify(data));else return data;\n  }\n\n  getObjPropertyByKey(obj, key) {\n    if (obj && obj._properties && obj._properties.length > 0) {\n      var found = false;\n\n      for (var i = 0; i < obj._properties.length; i++) {\n        var prop = obj._properties[i];\n        if (prop._key === key) found = prop;\n        if (found) return found;\n      }\n    }\n\n    return false;\n  }\n\n  obj2schema(entity, models) {\n    var schema = {};\n    schema.type = [];\n\n    for (let x = 0; x < entity._type.length; x++) {\n      const type = entity._type[x];\n\n      switch (type) {\n        case 'Object':\n          schema.type.push('object');\n\n          if (entity._description) {\n            schema.description = entity._description;\n          }\n\n          if (entity._minProperties >= 0) {\n            schema.minProperties = entity._minProperties;\n          }\n\n          if (entity._maxProperties >= 0) {\n            schema.maxProperties = entity._maxProperties;\n          }\n\n          if (entity._disallowAdditional) {\n            schema.additionalProperties = !entity._disallowAdditional;\n          }\n\n          if (entity._properties.length > 0) {\n            schema.properties = {};\n            schema.required = [];\n\n            for (var i = 0; i < entity._properties.length; i++) {\n              var val = entity._properties[i];\n\n              if (val && val._type) {\n                var res = this.obj2schema(val, models);\n                schema.properties[val._key] = res;\n\n                if (val._required) {\n                  schema.required.push(val._key);\n                }\n              }\n            }\n\n            if (schema.required.length === 0) {\n              delete schema.required;\n            }\n          }\n\n          break;\n\n        case 'OneOf':\n        case 'AnyOf':\n        case 'AllOf':\n          delete schema.type;\n          schema[type[0].toLowerCase() + type.slice(1)] = [];\n\n          if (entity._description) {\n            schema.description = entity._description;\n          }\n\n          for (var i = 0; i < entity._properties.length; i++) {\n            var val = entity._properties[i];\n\n            if (val && val._type) {\n              var res = this.obj2schema(val, models);\n              schema[type[0].toLowerCase() + type.slice(1)].push(res);\n            }\n          }\n\n          break;\n\n        case 'String':\n          schema.type.push('string');\n\n          if (entity._description) {\n            schema.description = entity._description;\n          }\n\n          if (entity._minLength >= 0) {\n            schema.minLength = entity._minLength;\n          }\n\n          if (entity._maxLength >= 0) {\n            schema.maxLength = entity._maxLength;\n          }\n\n          if (entity._pattern) {\n            schema.pattern = entity._pattern;\n          }\n\n          if (entity._format) {\n            schema.format = entity._format;\n          }\n\n          if (entity._default) {\n            schema.default = entity._default;\n          }\n\n          if (entity._enum) {\n            const _enum = '[' + entity._enum + ']';\n\n            try {\n              schema.enum = JSON.parse(_enum);\n            } catch (e) {\n              delete schema.enum;\n            }\n          }\n\n          break;\n\n        case 'Array':\n          schema.type.push('array');\n\n          if (entity._description) {\n            schema.description = entity._description;\n          }\n\n          if (entity._default) {\n            schema.default = entity._default;\n          }\n\n          if (entity._uniqueItems) {\n            schema.uniqueItems = entity._uniqueItems;\n          }\n\n          if (entity._minItems >= 0) {\n            schema.minItems = entity._minItems;\n          }\n\n          if (entity._maxItems >= 0) {\n            schema.maxItems = entity._maxItems;\n          }\n\n          if (entity._items && entity._items[0]) {\n            schema.items = this.obj2schema(entity._items[0], models);\n          }\n\n          break;\n\n        case 'Integer':\n        case 'Number':\n          schema.type.push(type === 'Integer' ? 'integer' : 'number');\n\n          if (entity._description) {\n            schema.description = entity._description;\n          }\n\n          if (entity._default) {\n            schema.default = entity._default;\n          }\n\n          if (entity._minimum >= 0) {\n            schema.minimum = entity._minimum;\n          }\n\n          if (entity._maximum >= 0) {\n            schema.maximum = entity._maximum;\n          }\n\n          if (entity._exclusiveMinimum) {\n            schema.exclusiveMinimum = entity._exclusiveMinimum;\n          }\n\n          if (entity._exclusiveMaximum) {\n            schema.exclusiveMaximum = entity._exclusiveMaximum;\n          }\n\n          if (entity._multipleOf >= 0) {\n            schema.multipleOf = entity._multipleOf;\n          }\n\n          if (entity._format) {\n            schema.format = entity._format;\n          }\n\n          if (entity._enum) {\n            const _enum = '[' + entity._enum + ']';\n\n            try {\n              schema.enum = JSON.parse(_enum);\n            } catch (e) {\n              delete schema.enum;\n            }\n          }\n\n          break;\n\n        case 'Boolean':\n          schema.type.push('boolean');\n\n          if (entity._description) {\n            schema.description = entity._description;\n          }\n\n          if (entity._default) {\n            try {\n              const bool = JSON.parse(entity._default);\n\n              if (typeof bool === 'boolean') {\n                schema.default = bool;\n              }\n            } catch (e) {}\n          }\n\n          break;\n\n        case 'Null':\n          schema.type.push('null');\n\n          if (entity._description) {\n            schema.description = entity._description;\n          }\n\n          if (entity._default) {\n            schema.default = entity._default;\n          }\n\n          break;\n\n        case '$ref':\n          let path = '';\n\n          if (models && models[entity._value] && models[entity._value].nameSpace) {\n            path = models[entity._value].nameSpace;\n          }\n\n          schema.$ref = (entity._path || '#/definitions/') + (path || entity._value);\n          delete schema.type;\n      }\n    }\n\n    if (schema.type && schema.type.length === 1) {\n      var t = schema.type[0];\n      schema.type = t;\n    }\n\n    return schema;\n  }\n\n  copyProps(obj, newModel) {\n    for (const key in newModel) {\n      if (!key) {\n        continue;\n      }\n\n      const val = newModel[key];\n\n      if (!obj.hasOwnProperty(key)) {\n        obj[key] = val;\n      }\n    }\n\n    ;\n  }\n\n  schema2obj(schema, key, required, isRoot, modelObjs, parent) {\n    //TODO: If schema has definitions defined, prepopulate modelObjs with that\n    if (!schema) {\n      schema = this.newObject('##ROOT##', null, '$response');\n      schema.root$$ = true;\n      return schema;\n    }\n\n    if (typeof schema === 'string') {\n      try {\n        schema = JSON.parse(schema);\n      } catch (e) {\n        return null;\n      }\n    }\n\n    if (key === undefined) key = '##ROOT##';\n    var parentDelim = '.';\n    if (!key) parentDelim = '';\n    if (!required) required = false;\n    if (!parent) parent = '$response';\n    var obj; //add type if missing\n\n    if (!schema.type) {\n      if (schema.properties) schema.type = 'object';else if (schema.items) schema.type = 'array';else if (schema.$ref) delete schema.type;else if (schema.oneOf) schema.type = 'OneOf';else if (schema.anyOf) schema.type = 'AnyOf';else if (schema.allOf) schema.type = 'AllOf';else schema.type = 'string';\n    }\n\n    if (!(schema.type instanceof Array)) {\n      schema.type = [schema.type];\n    } //var types = schema.type;\n\n\n    for (var x = 0; x < schema.type.length; x++) {\n      var type = schema.type[x];\n      var newModel;\n\n      switch (type) {\n        case 'object':\n          newModel = Object.assign({}, this.deepCopy(this.newObject(key, null, parent)));\n\n          if (obj && obj._type && obj._type.length > 0) {\n            obj._type.push(newModel._type[0]);\n\n            this.copyProps(obj, newModel);\n          } else {\n            obj = newModel;\n          }\n\n          if (schema.description) {\n            obj._description = schema.description;\n          }\n\n          if (schema.minProperties >= 0) {\n            obj._minProperties = schema.minProperties;\n          }\n\n          if (schema.maxProperties >= 0) {\n            obj._maxProperties = schema.maxProperties;\n          }\n\n          if (schema.hasOwnProperty('additionalProperties')) {\n            obj._disallowAdditional = !schema.additionalProperties;\n          }\n\n          schema.properties && Object.keys(schema.properties).forEach(_key => {\n            let entity = schema.properties[_key];\n            var req = false;\n\n            if (schema.required) {\n              req = schema.required.indexOf(_key) >= 0 ? true : false;\n            }\n\n            var childObj = {};\n            childObj = this.schema2obj(entity, _key, req, false, modelObjs, parent + parentDelim + key.replace('##ROOT##', 'data'));\n\n            obj._properties.push(childObj);\n          });\n          break;\n\n        case 'OneOf':\n        case 'AnyOf':\n        case 'AllOf':\n          newModel = Object.assign({}, this.deepCopy(this.newXOf(type, key, null, parent)));\n\n          if (obj && obj._type && obj._type.length > 0) {\n            obj._type.push(newModel._type[0]);\n\n            this.copyProps(obj, newModel);\n          } else {\n            obj = newModel;\n          }\n\n          if (schema.description) {\n            obj._description = schema.description;\n          }\n\n          if (schema.oneOf || schema.anyOf || schema.allOf) {\n            var fld = type[0].toLowerCase() + type.slice(1);\n            schema[fld].forEach((item, i) => {\n              var res = this.schema2obj(item, i.toString(), false, false, modelObjs, parent + parentDelim + key.replace('##ROOT##', 'data'));\n              res._hideKey = true;\n\n              obj._properties.push(res);\n            });\n          }\n\n          break;\n\n        case 'array':\n          newModel = Object.assign({}, this.newArray(key, parent));\n\n          if (obj && obj._type && obj._type.length > 0) {\n            obj._type.push(newModel._type[0]);\n\n            this.copyProps(obj, newModel);\n          } else {\n            obj = newModel;\n          }\n\n          if (schema.description) {\n            obj._description = schema.description;\n          }\n\n          if (schema.default) {\n            obj._default = schema.default;\n          }\n\n          if (schema.hasOwnProperty('uniqueItems')) {\n            obj._uniqueItems = obj.uniqueItems;\n          }\n\n          if (schema.hasOwnProperty('minItems')) {\n            obj._minItems = schema.minItems;\n          }\n\n          if (schema.hasOwnProperty('maxItems')) {\n            obj._maxItems = schema.maxItems;\n          }\n\n          if (schema.items) {\n            obj._items = [];\n            var req = false;\n\n            if (schema.required) {\n              req = schema.required.indexOf(key) >= 0 ? true : false;\n            }\n\n            obj._items.push(this.schema2obj(schema.items, '', req, false, modelObjs, parent + parentDelim + key.replace('##ROOT##', 'data') + '[0]'));\n          }\n\n          break;\n\n        case 'string':\n          newModel = Object.assign({}, this.newString(key, false, parent));\n\n          if (obj && obj._type && obj._type.length > 0) {\n            obj._type.push(newModel._type[0]);\n\n            this.copyProps(obj, newModel);\n          } else {\n            obj = newModel;\n          }\n\n          if (schema.description) {\n            obj._description = schema.description;\n          }\n\n          if (schema.minLength >= 0) {\n            obj._minLength = schema.minLength;\n          }\n\n          if (schema.maxLength >= 0) {\n            obj._maxLength = schema.maxLength;\n          }\n\n          if (schema.pattern) {\n            obj._pattern = schema.pattern;\n          }\n\n          if (schema.format) {\n            obj._format = schema.format;\n          }\n\n          if (schema.default) {\n            obj._default = schema.default;\n          }\n\n          if (schema.hasOwnProperty('enum') && schema.enum.length > 0) {\n            var _enum = JSON.stringify(schema.enum);\n\n            _enum = _enum.substr(1, _enum.length - 2);\n            _enum = _enum.replace(/,/g, ',\\n');\n            obj._enum = _enum;\n          }\n\n          break;\n\n        case 'integer':\n        case 'number':\n          if (type === 'integer') {\n            newModel = Object.assign({}, this.newInteger(key, parent));\n          } else {\n            newModel = Object.assign({}, this.newNumber(key, parent));\n          }\n\n          if (obj && obj._type && obj._type.length > 0) {\n            obj._type.push(newModel._type[0]);\n\n            this.copyProps(obj, newModel);\n          } else {\n            obj = newModel;\n          }\n\n          if (schema.description) {\n            obj._description = schema.description;\n          }\n\n          if (schema.default) {\n            obj._default = schema.default;\n          }\n\n          if (schema.minimum >= 0) {\n            obj._minimum = schema.minimum;\n          }\n\n          if (schema.maximum >= 0) {\n            obj._maximum = schema.maximum;\n          }\n\n          if (schema.exclusiveMinimum) {\n            obj._exclusiveMinimum = schema.exclusiveMinimum;\n          }\n\n          if (schema.exclusiveMaximum) {\n            obj._exclusiveMaximum = schema.exclusiveMaximum;\n          }\n\n          if (schema.multipleOf >= 0) {\n            obj._multipleOf = schema.multipleOf;\n          }\n\n          if (schema.format) {\n            obj._format = schema.format;\n          }\n\n          if (schema.hasOwnProperty('enum') && schema.enum.length > 0) {\n            var _enum = JSON.stringify(schema.enum);\n\n            _enum = _enum.substr(1, _enum.length - 2);\n            _enum = _enum.replace(/,/g, ',\\n');\n            obj._enum = _enum;\n          }\n\n          break;\n\n        case 'boolean':\n          newModel = Object.assign({}, this.newBoolean(key, parent));\n\n          if (obj && obj._type && obj._type.length > 0) {\n            obj._type.push(newModel._type[0]);\n\n            this.copyProps(obj, newModel);\n          } else {\n            obj = newModel;\n          }\n\n          if (schema.description) {\n            obj._description = schema.description;\n          }\n\n          if (schema.default) {\n            obj._default = schema.default;\n          }\n\n          break;\n\n        case 'null':\n          newModel = Object.assign({}, this.newNull(key, parent));\n\n          if (obj && obj._type && obj._type.length > 0) {\n            obj._type.push(newModel._type[0]);\n\n            this.copyProps(obj, newModel);\n          } else {\n            obj = newModel;\n          } //schema.type = 'null';\n\n\n          if (schema.description) {\n            obj._description = schema.description;\n          }\n\n          if (schema.default) {\n            obj._default = schema.default;\n          }\n\n          break;\n      }\n\n      if (!type && schema.$ref) {\n        var value = schema.$ref.substring(schema.$ref.indexOf('/', 2) + 1, schema.$ref.length); //find second /, #/definitions/ or #/responses/ etc\n\n        var path = schema.$ref.substring(0, schema.$ref.indexOf('/', 2) + 1);\n        var modelKey = '';\n\n        if (modelObjs) {\n          Object.keys(modelObjs).forEach(_key => {\n            let model = modelObjs[_key];\n\n            if (model.nameSpace === value) {\n              // @ts-ignore\n              modelKey = _key;\n            }\n          });\n        }\n\n        obj = this.new$ref(key, modelKey || value, parent, path);\n      }\n    }\n\n    obj._required = required;\n\n    if (isRoot) {\n      obj.root$$ = true;\n    }\n\n    return obj;\n  }\n\n  sanitizeModel(model) {\n    if (model.type instanceof Array && model.type.length === 1) {\n      model.type = model.type[0];\n    }\n\n    if (model.properties) {\n      Object.keys(model.properties).forEach(key => {\n        let value = model.properties[key];\n        model.properties[key] = this.sanitizeModel(value);\n      });\n    }\n\n    return model;\n  }\n\n  getModeldefinitions(models) {\n    const modelRefs = {};\n\n    for (const key in models) {\n      if (!key) {\n        continue;\n      }\n\n      const model = models[key];\n      modelRefs[model.nameSpace] = model.data;\n    }\n\n    ;\n    return modelRefs;\n  }\n\n}\n\nlet StateService = /*#__PURE__*/(() => {\n  class StateService {\n    constructor() {\n      this.initialState = {\n        showSelectorModal: false\n      };\n      this.stateTracker = new BehaviorSubject(this.initialState);\n    }\n    /** Allows subscription to the behavior subject as an observable */\n\n\n    getState() {\n      return this.stateTracker.asObservable();\n    }\n    /**\r\n     * Allows updating the current value of the behavior subject\r\n     * @param val a number representing the current value\r\n     * @param delta a number representing the positive or negative change in current value\r\n     */\n\n\n    setSelectorModel(sel) {\n      this.stateTracker.next({\n        showSelectorModal: sel\n      });\n    }\n    /** Resets the count to the initial value */\n\n\n    resetState() {\n      this.stateTracker.next(this.initialState);\n    }\n\n  }\n\n  StateService.ɵfac = function StateService_Factory(t) {\n    return new (t || StateService)();\n  };\n\n  StateService.ɵprov = ɵɵdefineInjectable({\n    token: StateService,\n    factory: StateService.ɵfac\n  });\n  /*@__PURE__*/\n\n  return StateService;\n})();\n\n(function () {\n  void 0;\n})();\n\nfunction MainJsonSchemaComponent_div_0_span_4_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵɵelementStart(0, \"span\", 23);\n    ɵɵtext(1, \"-\");\n    ɵɵelementEnd();\n  }\n}\n\nfunction MainJsonSchemaComponent_div_0_span_4_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵɵelementStart(0, \"span\");\n    ɵɵtext(1, \"+\");\n    ɵɵelementEnd();\n  }\n}\n\nfunction MainJsonSchemaComponent_div_0_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = ɵɵgetCurrentView();\n\n    ɵɵelementStart(0, \"span\", 21);\n    ɵɵlistener(\"click\", function MainJsonSchemaComponent_div_0_span_4_Template_span_click_0_listener() {\n      ɵɵrestoreView(_r16);\n      const ctx_r15 = ɵɵnextContext(2);\n      return ctx_r15.ctrl.expanded = !ctx_r15.ctrl.expanded;\n    });\n    ɵɵtemplate(1, MainJsonSchemaComponent_div_0_span_4_span_1_Template, 2, 0, \"span\", 22);\n    ɵɵtemplate(2, MainJsonSchemaComponent_div_0_span_4_span_2_Template, 2, 0, \"span\", 17);\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵɵnextContext(2);\n    ɵɵproperty(\"ngClass\", ctx_r1.ctrl.expanded ? \"glyphicon-triangle-bottom\" : \"glyphicon-triangle-right\");\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngIf\", ctx_r1.ctrl.expanded);\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngIf\", !ctx_r1.ctrl.expanded);\n  }\n}\n\nfunction MainJsonSchemaComponent_div_0_span_8_span_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵɵelementStart(0, \"span\");\n    ɵɵtext(1);\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r21 = ɵɵnextContext(4);\n    ɵɵadvance(1);\n    ɵɵtextInterpolate1(\" (#/definitions/\", ctx_r21.models[ctx_r21.entity._items[0]._value].nameSpace, \")\");\n  }\n}\n\nfunction MainJsonSchemaComponent_div_0_span_8_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵɵelementStart(0, \"span\", 27);\n    ɵɵtext(1);\n    ɵɵtemplate(2, MainJsonSchemaComponent_div_0_span_8_span_3_span_2_Template, 2, 1, \"span\", 17);\n    ɵɵtext(3, \" ] \");\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r18 = ɵɵnextContext(3);\n    ɵɵproperty(\"ngClass\", ctx_r18.entity._items[0]._type[0]);\n    ɵɵadvance(1);\n    ɵɵtextInterpolate1(\"[ \", ctx_r18.entity._items[0]._type[0], \" \");\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngIf\", ctx_r18.entity._items[0]._type[0] == \"$ref\");\n  }\n}\n\nfunction MainJsonSchemaComponent_div_0_span_8_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵɵelementStart(0, \"span\", 28);\n    ɵɵtext(1, \"[Unspecified] \");\n    ɵɵelementEnd();\n  }\n}\n\nfunction MainJsonSchemaComponent_div_0_span_8_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵɵelementStart(0, \"span\", 29);\n    ɵɵtext(1);\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r20 = ɵɵnextContext(3);\n    ɵɵadvance(1);\n    ɵɵtextInterpolate1(\"(#/definitions/\", ctx_r20.models[ctx_r20.entity._value] && ctx_r20.models[ctx_r20.entity._value].nameSpace, \")\");\n  }\n}\n\nfunction MainJsonSchemaComponent_div_0_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵɵelementStart(0, \"span\");\n    ɵɵelementStart(1, \"span\", 24);\n    ɵɵtext(2);\n    ɵɵelementEnd();\n    ɵɵtemplate(3, MainJsonSchemaComponent_div_0_span_8_span_3_Template, 4, 3, \"span\", 25);\n    ɵɵtemplate(4, MainJsonSchemaComponent_div_0_span_8_span_4_Template, 2, 0, \"span\", 26);\n    ɵɵtemplate(5, MainJsonSchemaComponent_div_0_span_8_span_5_Template, 2, 1, \"span\", 10);\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const t_r17 = ctx.$implicit;\n    const ctx_r2 = ɵɵnextContext(2);\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngClass\", t_r17);\n    ɵɵadvance(1);\n    ɵɵtextInterpolate(t_r17);\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngIf\", t_r17 === \"Array\" && ctx_r2.entity._items[0]);\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngIf\", t_r17 === \"Array\" && !ctx_r2.entity._items[0]);\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngIf\", t_r17 === \"$ref\" && ctx_r2.models);\n  }\n}\n\nfunction MainJsonSchemaComponent_div_0_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵɵelementStart(0, \"span\", 29);\n    ɵɵtext(1, \"[ \");\n    ɵɵelementStart(2, \"span\");\n    ɵɵtext(3);\n    ɵɵelementEnd();\n    ɵɵtext(4, \" ] \");\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵɵnextContext(2);\n    ɵɵadvance(3);\n    ɵɵtextInterpolate(ctx_r3.entity._properties && ctx_r3.entity._properties.length || ctx_r3.entity._items && ctx_r3.entity._items[0]._properties && ctx_r3.entity._items[0]._properties.length || 0);\n  }\n}\n\nfunction MainJsonSchemaComponent_div_0_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = ɵɵgetCurrentView();\n\n    ɵɵelementStart(0, \"div\", 30);\n    ɵɵlistener(\"click\", function MainJsonSchemaComponent_div_0_div_14_Template_div_click_0_listener() {\n      ɵɵrestoreView(_r23);\n      const ctx_r22 = ɵɵnextContext(2);\n      ctx_r22.showDetailsPan = false;\n      return ctx_r22.refreshSchema();\n    });\n    ɵɵelementStart(1, \"span\", 31);\n    ɵɵtext(2, \"\\u2713\");\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n  }\n}\n\nfunction MainJsonSchemaComponent_div_0_button_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = ɵɵgetCurrentView();\n\n    ɵɵelementStart(0, \"button\", 32);\n    ɵɵlistener(\"click\", function MainJsonSchemaComponent_div_0_button_15_Template_button_click_0_listener() {\n      ɵɵrestoreView(_r25);\n      const ctx_r24 = ɵɵnextContext(2);\n      return ctx_r24.removeEntity(ctx_r24.entity);\n    });\n    ɵɵelementStart(1, \"span\", 33);\n    ɵɵtext(2, \"\\u2716\");\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n  }\n}\n\nfunction MainJsonSchemaComponent_div_0_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵɵelement(0, \"span\", 34);\n  }\n}\n\nfunction MainJsonSchemaComponent_div_0_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = ɵɵgetCurrentView();\n\n    ɵɵelementStart(0, \"span\");\n    ɵɵelementStart(1, \"input\", 35);\n    ɵɵlistener(\"ngModelChange\", function MainJsonSchemaComponent_div_0_span_18_Template_input_ngModelChange_1_listener($event) {\n      ɵɵrestoreView(_r27);\n      const ctx_r26 = ɵɵnextContext(2);\n      return ctx_r26.entity._required = $event;\n    })(\"ngModelChange\", function MainJsonSchemaComponent_div_0_span_18_Template_input_ngModelChange_1_listener($event) {\n      ɵɵrestoreView(_r27);\n      const ctx_r28 = ɵɵnextContext(2);\n      return ctx_r28.refreshSchema($event);\n    });\n    ɵɵelementEnd();\n    ɵɵtext(2, \"Required\");\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = ɵɵnextContext(2);\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngModel\", ctx_r7.entity._required);\n  }\n}\n\nfunction MainJsonSchemaComponent_div_0_span_19_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵɵelementStart(0, \"span\");\n    ɵɵtext(1);\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = ɵɵnextContext(2);\n    ɵɵadvance(1);\n    ɵɵtextInterpolate(ctx_r8.$msg);\n  }\n}\n\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\n\nfunction MainJsonSchemaComponent_div_0_div_20_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = ɵɵgetCurrentView();\n\n    ɵɵelementStart(0, \"div\", 41);\n    ɵɵelementStart(1, \"label\", 42);\n    ɵɵtext(2, \"Name:\");\n    ɵɵelementEnd();\n    ɵɵelementStart(3, \"div\", 43);\n    ɵɵelementStart(4, \"input\", 48);\n    ɵɵlistener(\"ngModelChange\", function MainJsonSchemaComponent_div_0_div_20_div_6_Template_input_ngModelChange_4_listener($event) {\n      ɵɵrestoreView(_r33);\n      const ctx_r32 = ɵɵnextContext(3);\n      return ctx_r32.entity._key = $event;\n    });\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r29 = ɵɵnextContext(3);\n    ɵɵadvance(4);\n    ɵɵproperty(\"ngModelOptions\", ɵɵpureFunction0(2, _c0))(\"ngModel\", ctx_r29.entity._key);\n  }\n}\n\nfunction MainJsonSchemaComponent_div_0_div_20_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = ɵɵgetCurrentView();\n\n    ɵɵelementStart(0, \"div\");\n    ɵɵelementStart(1, \"div\", 49);\n    ɵɵtext(2, \"Common Validations\");\n    ɵɵelementEnd();\n    ɵɵelementStart(3, \"div\");\n    ɵɵelementStart(4, \"div\", 50);\n    ɵɵelementStart(5, \"label\");\n    ɵɵelementStart(6, \"input\", 51);\n    ɵɵlistener(\"ngModelChange\", function MainJsonSchemaComponent_div_0_div_20_div_19_Template_input_ngModelChange_6_listener($event) {\n      ɵɵrestoreView(_r35);\n      const ctx_r34 = ɵɵnextContext(3);\n      return ctx_r34.entity._required = $event;\n    });\n    ɵɵelementEnd();\n    ɵɵtext(7, \" Required ?\");\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r30 = ɵɵnextContext(3);\n    ɵɵadvance(6);\n    ɵɵproperty(\"ngModel\", ctx_r30.entity._required)(\"ngModelOptions\", ɵɵpureFunction0(2, _c0));\n  }\n}\n\nfunction MainJsonSchemaComponent_div_0_div_20_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵɵelementStart(0, \"div\");\n    ɵɵelementStart(1, \"div\", 49);\n    ɵɵtext(2);\n    ɵɵelementEnd();\n    ɵɵelement(3, \"ng-jsonschema-field\", 52);\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const type_r36 = ctx.$implicit;\n    ɵɵadvance(2);\n    ɵɵtextInterpolate1(\"\", type_r36, \" Validations\");\n    ɵɵadvance(1);\n    ɵɵproperty(\"type\", type_r36);\n  }\n}\n\nfunction MainJsonSchemaComponent_div_0_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = ɵɵgetCurrentView();\n\n    ɵɵelementStart(0, \"div\", 36);\n    ɵɵelementStart(1, \"div\", 37);\n    ɵɵelementStart(2, \"div\", 38);\n    ɵɵtext(3, \"Basic Info\");\n    ɵɵelementEnd();\n    ɵɵelementStart(4, \"div\", 23);\n    ɵɵelementStart(5, \"form\", 39);\n    ɵɵtemplate(6, MainJsonSchemaComponent_div_0_div_20_div_6_Template, 5, 3, \"div\", 40);\n    ɵɵelementStart(7, \"div\", 41);\n    ɵɵelementStart(8, \"label\", 42);\n    ɵɵtext(9, \"Desc: \");\n    ɵɵelementEnd();\n    ɵɵelementStart(10, \"div\", 43);\n    ɵɵelementStart(11, \"textarea\", 44);\n    ɵɵlistener(\"ngModelChange\", function MainJsonSchemaComponent_div_0_div_20_Template_textarea_ngModelChange_11_listener($event) {\n      ɵɵrestoreView(_r38);\n      const ctx_r37 = ɵɵnextContext(2);\n      return ctx_r37.entity._description = $event;\n    });\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementStart(12, \"div\", 41);\n    ɵɵelementStart(13, \"label\", 42);\n    ɵɵtext(14, \"Default:\");\n    ɵɵelementEnd();\n    ɵɵelementStart(15, \"div\", 43);\n    ɵɵelementStart(16, \"input\", 45);\n    ɵɵlistener(\"ngModelChange\", function MainJsonSchemaComponent_div_0_div_20_Template_input_ngModelChange_16_listener($event) {\n      ɵɵrestoreView(_r38);\n      const ctx_r39 = ɵɵnextContext(2);\n      return ctx_r39.entity._default = $event;\n    });\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementStart(17, \"div\", 46);\n    ɵɵelementStart(18, \"form\", 47);\n    ɵɵtemplate(19, MainJsonSchemaComponent_div_0_div_20_div_19_Template, 8, 3, \"div\", 17);\n    ɵɵtemplate(20, MainJsonSchemaComponent_div_0_div_20_div_20_Template, 4, 2, \"div\", 8);\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = ɵɵnextContext(2);\n    ɵɵadvance(6);\n    ɵɵproperty(\"ngIf\", !ctx_r9.entity.root$$);\n    ɵɵadvance(5);\n    ɵɵproperty(\"ngModel\", ctx_r9.entity._description)(\"ngModelOptions\", ɵɵpureFunction0(7, _c0));\n    ɵɵadvance(5);\n    ɵɵproperty(\"ngModel\", ctx_r9.entity._default)(\"ngModelOptions\", ɵɵpureFunction0(8, _c0));\n    ɵɵadvance(3);\n    ɵɵproperty(\"ngIf\", !ctx_r9.entity.root$$);\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngForOf\", ctx_r9.entity._type);\n  }\n}\n\nfunction MainJsonSchemaComponent_div_0_div_21_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵɵelementStart(0, \"div\", 55);\n    ɵɵelement(1, \"ng-jsonschema-main\", 56);\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const prop_r41 = ctx.$implicit;\n    const ctx_r40 = ɵɵnextContext(3);\n    ɵɵadvance(1);\n    ɵɵproperty(\"refreshSchema\", ctx_r40.refreshSchema)(\"addNewProp\", ctx_r40.addNewProp)(\"models\", ctx_r40.models)(\"removeEntity\", ctx_r40.removeEntity)(\"openMenu\", ctx_r40.openMenu)(\"entity\", prop_r41);\n  }\n}\n\nfunction MainJsonSchemaComponent_div_0_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵɵelementStart(0, \"div\", 53);\n    ɵɵtemplate(1, MainJsonSchemaComponent_div_0_div_21_div_1_Template, 2, 6, \"div\", 54);\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = ɵɵnextContext(2);\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngForOf\", ctx_r10.entity._properties);\n  }\n}\n\nfunction MainJsonSchemaComponent_div_0_div_22_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵɵelementStart(0, \"div\", 55);\n    ɵɵelement(1, \"ng-jsonschema-main\", 56);\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const prop_r43 = ctx.$implicit;\n    const ctx_r42 = ɵɵnextContext(3);\n    ɵɵadvance(1);\n    ɵɵproperty(\"refreshSchema\", ctx_r42.refreshSchema)(\"addNewProp\", ctx_r42.addNewProp)(\"models\", ctx_r42.models)(\"removeEntity\", ctx_r42.removeEntity)(\"openMenu\", ctx_r42.openMenu)(\"entity\", prop_r43);\n  }\n}\n\nfunction MainJsonSchemaComponent_div_0_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵɵelementStart(0, \"div\");\n    ɵɵtemplate(1, MainJsonSchemaComponent_div_0_div_22_div_1_Template, 2, 6, \"div\", 54);\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = ɵɵnextContext(2);\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngForOf\", ctx_r11.entity._items[0]._properties);\n  }\n}\n\nfunction MainJsonSchemaComponent_div_0_button_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r45 = ɵɵgetCurrentView();\n\n    ɵɵelementStart(0, \"button\", 57);\n    ɵɵlistener(\"click\", function MainJsonSchemaComponent_div_0_button_23_Template_button_click_0_listener($event) {\n      ɵɵrestoreView(_r45);\n      const ctx_r44 = ɵɵnextContext(2);\n      return ctx_r44.addNewProp(ctx_r44.entity, $event);\n    });\n    ɵɵelementStart(1, \"mat-icon\");\n    ɵɵtext(2, \"add_box\");\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = ɵɵnextContext(2);\n    ɵɵproperty(\"disabled\", ctx_r12.mode == \"static\");\n  }\n}\n\nfunction MainJsonSchemaComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r47 = ɵɵgetCurrentView();\n\n    ɵɵelementStart(0, \"div\", 1);\n    ɵɵelementStart(1, \"fieldset\", 2);\n    ɵɵelementStart(2, \"div\", 3);\n    ɵɵelementStart(3, \"span\", 4);\n    ɵɵtemplate(4, MainJsonSchemaComponent_div_0_span_4_Template, 3, 3, \"span\", 5);\n    ɵɵelementStart(5, \"span\", 4);\n    ɵɵelementStart(6, \"input\", 6);\n    ɵɵlistener(\"ngModelChange\", function MainJsonSchemaComponent_div_0_Template_input_ngModelChange_6_listener($event) {\n      ɵɵrestoreView(_r47);\n      const ctx_r46 = ɵɵnextContext();\n      return ctx_r46.refreshSchema($event);\n    })(\"ngModelChange\", function MainJsonSchemaComponent_div_0_Template_input_ngModelChange_6_listener($event) {\n      ɵɵrestoreView(_r47);\n      const ctx_r48 = ɵɵnextContext();\n      return ctx_r48.entity._key = $event;\n    });\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementStart(7, \"button\", 7);\n    ɵɵlistener(\"click\", function MainJsonSchemaComponent_div_0_Template_button_click_7_listener($event) {\n      ɵɵrestoreView(_r47);\n      const ctx_r49 = ɵɵnextContext();\n      return ctx_r49.openMenu(ctx_r49.entity, $event);\n    });\n    ɵɵtemplate(8, MainJsonSchemaComponent_div_0_span_8_Template, 6, 5, \"span\", 8);\n    ɵɵelement(9, \"span\", 9);\n    ɵɵelementEnd();\n    ɵɵtemplate(10, MainJsonSchemaComponent_div_0_span_10_Template, 5, 1, \"span\", 10);\n    ɵɵelementStart(11, \"div\", 11);\n    ɵɵlistener(\"click\", function MainJsonSchemaComponent_div_0_Template_div_click_11_listener() {\n      ɵɵrestoreView(_r47);\n      const ctx_r50 = ɵɵnextContext();\n      return ctx_r50.showDetailsPan = true;\n    });\n    ɵɵelementStart(12, \"span\", 12);\n    ɵɵtext(13, \"\\u270E\");\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵtemplate(14, MainJsonSchemaComponent_div_0_div_14_Template, 3, 0, \"div\", 13);\n    ɵɵtemplate(15, MainJsonSchemaComponent_div_0_button_15_Template, 3, 0, \"button\", 14);\n    ɵɵelementStart(16, \"div\", 15);\n    ɵɵtemplate(17, MainJsonSchemaComponent_div_0_span_17_Template, 1, 0, \"span\", 16);\n    ɵɵtemplate(18, MainJsonSchemaComponent_div_0_span_18_Template, 3, 1, \"span\", 17);\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵtemplate(19, MainJsonSchemaComponent_div_0_span_19_Template, 2, 1, \"span\", 17);\n    ɵɵelementEnd();\n    ɵɵtemplate(20, MainJsonSchemaComponent_div_0_div_20_Template, 21, 9, \"div\", 18);\n    ɵɵtemplate(21, MainJsonSchemaComponent_div_0_div_21_Template, 2, 1, \"div\", 19);\n    ɵɵtemplate(22, MainJsonSchemaComponent_div_0_div_22_Template, 2, 1, \"div\", 17);\n    ɵɵtemplate(23, MainJsonSchemaComponent_div_0_button_23_Template, 3, 1, \"button\", 20);\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵɵnextContext();\n    ɵɵadvance(1);\n    ɵɵproperty(\"disabled\", ctx_r0.entity.disabled);\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngClass\", ctx_r0.showDetailsPan ? \"t_bg\" : \"\");\n    ɵɵadvance(1);\n    ɵɵproperty(\"hidden\", (ctx_r0.mode == \"list\" || ctx_r0.mode == \"static\") && ctx_r0.entity.root$$);\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngIf\", ctx_r0.canAddChild(ctx_r0.entity._type, ctx_r0.entity._items && ctx_r0.entity._items[0] && ctx_r0.entity._items[0]._type[0]));\n    ɵɵadvance(1);\n    ɵɵproperty(\"hidden\", ctx_r0.entity.root$$);\n    ɵɵadvance(1);\n    ɵɵproperty(\"readonly\", ctx_r0.mode == \"static\")(\"ngModel\", ctx_r0.entity._key);\n    ɵɵadvance(2);\n    ɵɵproperty(\"ngForOf\", ctx_r0.entity._type);\n    ɵɵadvance(2);\n    ɵɵproperty(\"ngIf\", ctx_r0.canAddChild(ctx_r0.entity._type, ctx_r0.entity._items && ctx_r0.entity._items[0] && ctx_r0.entity._items[0]._type[0]));\n    ɵɵadvance(1);\n    ɵɵproperty(\"hidden\", ctx_r0.showDetailsPan);\n    ɵɵadvance(3);\n    ɵɵproperty(\"ngIf\", ctx_r0.showDetailsPan);\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngIf\", !ctx_r0.entity.root$$ && ctx_r0.mode != \"static\");\n    ɵɵadvance(2);\n    ɵɵproperty(\"ngIf\", ctx_r0.entity._description);\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngIf\", !ctx_r0.entity.root$$);\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngIf\", (ctx_r0.mode == \"list\" || ctx_r0.mode == \"static\") && ctx_r0.entity.root$$);\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngIf\", ctx_r0.showDetailsPan);\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngIf\", ctx_r0.ctrl.expanded);\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngIf\", ctx_r0.entity._items && ctx_r0.entity._items[0] && ctx_r0.entity._type.indexOf(\"Object\") < 0 && ctx_r0.hasChild.indexOf(ctx_r0.entity._items[0]._type[0]) >= 0);\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngIf\", ctx_r0.canAddChild(ctx_r0.entity._type, ctx_r0.entity._items && ctx_r0.entity._items[0] && ctx_r0.entity._items[0]._type[0]) && !ctx_r0.entity.refTxt);\n  }\n}\n\nlet MainJsonSchemaComponent = /*#__PURE__*/(() => {\n  class MainJsonSchemaComponent {\n    constructor() {\n      this.showDetailsPan = false;\n      this.ctrl = {\n        expanded: true\n      };\n      this.hasChild = ['Object', 'OneOf', 'AllOf', 'AnyOf'];\n    }\n\n    ngOnInit() {\n      console.log(this);\n    } // keys(obj) {\n    //     return Object.keys(obj);\n    // }\n\n\n    checkTypeObject(entity) {\n      return entity._items && entity._items[0] && entity._items[0]._type[0] && entity._items[0]._type[0] === 'Object';\n    }\n\n    canAddChild(types, arrType) {\n      return this.hasChild.indexOf(types) >= 0 || types.some(v => {\n        return this.hasChild.indexOf(v) >= 0;\n      }) || this.hasChild.indexOf(arrType) >= 0;\n    }\n\n    log(ent) {\n      console.log(ent);\n    }\n\n  }\n\n  MainJsonSchemaComponent.ɵfac = function MainJsonSchemaComponent_Factory(t) {\n    return new (t || MainJsonSchemaComponent)();\n  };\n\n  MainJsonSchemaComponent.ɵcmp = ɵɵdefineComponent({\n    type: MainJsonSchemaComponent,\n    selectors: [[\"ng-jsonschema-main\"]],\n    inputs: {\n      entity: \"entity\",\n      openMenu: \"openMenu\",\n      refreshSchema: \"refreshSchema\",\n      mode: \"mode\",\n      models: \"models\",\n      $msg: \"$msg\",\n      removeEntity: \"removeEntity\",\n      addNewProp: \"addNewProp\"\n    },\n    features: [ɵɵProvidersFeature([])],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"objCont\", 4, \"ngIf\"], [1, \"objCont\"], [3, \"disabled\"], [1, \"js-row\", 3, \"ngClass\"], [3, \"hidden\"], [\"class\", \"glyphicon t_color obj-exp\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"type\", \"text\", 1, \"model-key\", 3, \"readonly\", \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"mat-stroked-button\", \"\", 1, \"model-selector\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [1, \"caret\"], [\"class\", \"faint\", 4, \"ngIf\"], [1, \"model-detail\", 3, \"hidden\", \"click\"], [1, \"glyphicon\", \"glyphicon-pencil\"], [\"class\", \" model-done\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"model-remove\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [1, \"model-summary\"], [\"class\", \"icon bj-playlist_add_check ico\", \"uib-tooltip\", \"Description present\", 4, \"ngIf\"], [4, \"ngIf\"], [\"class\", \"model-det-cont\", 4, \"ngIf\"], [\"class\", \"objProps\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Add new prop\", \"class\", \"obj-add\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [1, \"glyphicon\", \"t_color\", \"obj-exp\", 3, \"ngClass\", \"click\"], [\"class\", \"\", 4, \"ngIf\"], [1, \"\"], [3, \"ngClass\"], [\"class\", \"unspecified\", 3, \"ngClass\", 4, \"ngIf\"], [\"ngClass\", \"Unspecified\", \"class\", \"unspecified\", 4, \"ngIf\"], [1, \"unspecified\", 3, \"ngClass\"], [\"ngClass\", \"Unspecified\", 1, \"unspecified\"], [1, \"faint\"], [1, \"model-done\", 3, \"click\"], [1, \"glyphicon\", \"glyphicon-ok\"], [\"type\", \"button\", 1, \"model-remove\", 3, \"click\"], [1, \"glyphicon\", \"glyphicon-remove\"], [\"uib-tooltip\", \"Description present\", 1, \"icon\", \"bj-playlist_add_check\", \"ico\"], [\"type\", \"checkbox\", 1, \"small\", 3, \"ngModel\", \"ngModelChange\"], [1, \"model-det-cont\"], [1, \"col-xs-6\", \"model-det-child\"], [1, \"t_color\", \"bold\"], [\"name\", \"detailForm\", \"role\", \"form\", 1, \"form-horizontal\", \"form-compact\", \"model-detail-form\"], [\"class\", \"form-group\", 4, \"ngIf\"], [1, \"form-group\"], [1, \"control-label\", \"col-xs-2\"], [1, \"col-xs-9\"], [1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"type\", \"text\", 1, \"form-control\", \"sm\", \"detail-ip\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [1, \"col-xs-6\"], [\"name\", \"detailForm\", \"role\", \"form\", 1, \"form-inline\", \"model-detail-form\"], [\"type\", \"text\", \"id\", \"foldName\", \"placeholder\", \"Field Name\", 1, \"form-control\", \"sm\", \"detail-ip\", 3, \"ngModelOptions\", \"ngModel\", \"ngModelChange\"], [1, \"t_color\"], [1, \"checkbox\", \"padding\"], [\"type\", \"checkbox\", 1, \"small\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [3, \"type\"], [1, \"objProps\"], [\"class\", \"propCont\", 4, \"ngFor\", \"ngForOf\"], [1, \"propCont\"], [3, \"refreshSchema\", \"addNewProp\", \"models\", \"removeEntity\", \"openMenu\", \"entity\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Add new prop\", 1, \"obj-add\", 3, \"disabled\", \"click\"]],\n    template: function MainJsonSchemaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵɵtemplate(0, MainJsonSchemaComponent_div_0_Template, 24, 19, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        ɵɵproperty(\"ngIf\", ctx.entity && ctx.entity._type);\n      }\n    },\n    directives: [NgIf, NgClass, DefaultValueAccessor, NgControlStatus, NgModel, MatButton, NgForOf, CheckboxControlValueAccessor, ɵangular_packages_forms_forms_y, NgControlStatusGroup, NgForm, FieldJsonSchemaComponent, MainJsonSchemaComponent, MatIcon],\n    encapsulation: 2\n  });\n  /*@__PURE__*/\n\n  return MainJsonSchemaComponent;\n})();\n\n(function () {\n  void 0;\n})();\n\nfunction SelectSchemaJsonSchemaComponent_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = ɵɵgetCurrentView();\n\n    ɵɵelementStart(0, \"button\", 6);\n    ɵɵlistener(\"click\", function SelectSchemaJsonSchemaComponent_button_9_Template_button_click_0_listener($event) {\n      ɵɵrestoreView(_r10);\n      const ctx_r9 = ɵɵnextContext();\n      return ctx_r9.changeModelType(\"Array\", ctx_r9.entity, $event);\n    });\n    ɵɵtext(1, \"Array\");\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵɵnextContext();\n    ɵɵproperty(\"ngClass\", ctx_r0.configs.currModelType.indexOf(\"Array\") >= 0 ? \"t_bg\" : \"\");\n  }\n}\n\nfunction SelectSchemaJsonSchemaComponent_button_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = ɵɵgetCurrentView();\n\n    ɵɵelementStart(0, \"button\", 6);\n    ɵɵlistener(\"click\", function SelectSchemaJsonSchemaComponent_button_16_Template_button_click_0_listener($event) {\n      ɵɵrestoreView(_r12);\n      const ctx_r11 = ɵɵnextContext();\n      return ctx_r11.changeModelType(\"Null\", ctx_r11.entity, $event);\n    });\n    ɵɵtext(1, \"null\");\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵɵnextContext();\n    ɵɵproperty(\"ngClass\", ctx_r1.configs.currModelType.indexOf(\"Null\") >= 0 ? \"t_bg\" : \"\");\n  }\n}\n\nfunction SelectSchemaJsonSchemaComponent_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = ɵɵgetCurrentView();\n\n    ɵɵelementStart(0, \"button\", 6);\n    ɵɵlistener(\"click\", function SelectSchemaJsonSchemaComponent_button_17_Template_button_click_0_listener($event) {\n      ɵɵrestoreView(_r14);\n      const ctx_r13 = ɵɵnextContext();\n      return ctx_r13.changeModelType(\"Object\", ctx_r13.entity, $event);\n    });\n    ɵɵtext(1, \"Object\");\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵɵnextContext();\n    ɵɵproperty(\"ngClass\", ctx_r2.configs.currModelType.indexOf(\"Object\") >= 0 ? \"t_bg\" : \"\");\n  }\n}\n\nfunction SelectSchemaJsonSchemaComponent_button_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = ɵɵgetCurrentView();\n\n    ɵɵelementStart(0, \"button\", 6);\n    ɵɵlistener(\"click\", function SelectSchemaJsonSchemaComponent_button_20_Template_button_click_0_listener($event) {\n      ɵɵrestoreView(_r16);\n      const ctx_r15 = ɵɵnextContext();\n      return ctx_r15.changeModelType(\"$ref\", ctx_r15.entity, $event);\n    });\n    ɵɵtext(1, \"$ref\");\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵɵnextContext();\n    ɵɵproperty(\"ngClass\", ctx_r3.configs.currModelType.indexOf(\"$ref\") >= 0 ? \"t_bg\" : \"\");\n  }\n}\n\nfunction SelectSchemaJsonSchemaComponent_button_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = ɵɵgetCurrentView();\n\n    ɵɵelementStart(0, \"button\", 6);\n    ɵɵlistener(\"click\", function SelectSchemaJsonSchemaComponent_button_21_Template_button_click_0_listener($event) {\n      ɵɵrestoreView(_r18);\n      const ctx_r17 = ɵɵnextContext();\n      return ctx_r17.changeModelType(\"OneOf\", ctx_r17.entity, $event);\n    });\n    ɵɵtext(1, \"OneOf\");\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵɵnextContext();\n    ɵɵproperty(\"ngClass\", ctx_r4.configs.currModelType.indexOf(\"OneOf\") >= 0 ? \"t_bg\" : \"\");\n  }\n}\n\nfunction SelectSchemaJsonSchemaComponent_button_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = ɵɵgetCurrentView();\n\n    ɵɵelementStart(0, \"button\", 6);\n    ɵɵlistener(\"click\", function SelectSchemaJsonSchemaComponent_button_22_Template_button_click_0_listener($event) {\n      ɵɵrestoreView(_r20);\n      const ctx_r19 = ɵɵnextContext();\n      return ctx_r19.changeModelType(\"AnyOf\", ctx_r19.entity, $event);\n    });\n    ɵɵtext(1, \"AnyOf\");\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵɵnextContext();\n    ɵɵproperty(\"ngClass\", ctx_r5.configs.currModelType.indexOf(\"AnyOf\") >= 0 ? \"t_bg\" : \"\");\n  }\n}\n\nfunction SelectSchemaJsonSchemaComponent_button_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = ɵɵgetCurrentView();\n\n    ɵɵelementStart(0, \"button\", 6);\n    ɵɵlistener(\"click\", function SelectSchemaJsonSchemaComponent_button_23_Template_button_click_0_listener($event) {\n      ɵɵrestoreView(_r22);\n      const ctx_r21 = ɵɵnextContext();\n      return ctx_r21.changeModelType(\"AllOf\", ctx_r21.entity, $event);\n    });\n    ɵɵtext(1, \"AllOf\");\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = ɵɵnextContext();\n    ɵɵproperty(\"ngClass\", ctx_r6.configs.currModelType.indexOf(\"AllOf\") >= 0 ? \"t_bg\" : \"\");\n  }\n}\n\nfunction SelectSchemaJsonSchemaComponent_div_24_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = ɵɵgetCurrentView();\n\n    ɵɵelementStart(0, \"button\", 6);\n    ɵɵlistener(\"click\", function SelectSchemaJsonSchemaComponent_div_24_button_12_Template_button_click_0_listener($event) {\n      ɵɵrestoreView(_r25);\n      const ctx_r24 = ɵɵnextContext(2);\n      return ctx_r24.setArrayType(\"Object\", ctx_r24.entity, $event);\n    });\n    ɵɵtext(1, \"Object\");\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r23 = ɵɵnextContext(2);\n    ɵɵproperty(\"ngClass\", ctx_r23.selectedEntity._items[0] && ctx_r23.selectedEntity._items[0]._type[0] == \"Object\" ? \"t_bg\" : \"\");\n  }\n}\n\nfunction SelectSchemaJsonSchemaComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = ɵɵgetCurrentView();\n\n    ɵɵelementStart(0, \"div\");\n    ɵɵelementStart(1, \"div\", 1);\n    ɵɵtext(2, \"Array Items Type\");\n    ɵɵelementEnd();\n    ɵɵelementStart(3, \"div\", 8);\n    ɵɵelementStart(4, \"button\", 6);\n    ɵɵlistener(\"click\", function SelectSchemaJsonSchemaComponent_div_24_Template_button_click_4_listener($event) {\n      ɵɵrestoreView(_r27);\n      const ctx_r26 = ɵɵnextContext();\n      return ctx_r26.setArrayType(\"Unspecified\", ctx_r26.entity, $event);\n    });\n    ɵɵtext(5, \"Unspecified\");\n    ɵɵelementEnd();\n    ɵɵelementStart(6, \"button\", 6);\n    ɵɵlistener(\"click\", function SelectSchemaJsonSchemaComponent_div_24_Template_button_click_6_listener($event) {\n      ɵɵrestoreView(_r27);\n      const ctx_r28 = ɵɵnextContext();\n      return ctx_r28.setArrayType(\"Integer\", ctx_r28.entity, $event);\n    });\n    ɵɵtext(7, \"Integer\");\n    ɵɵelementEnd();\n    ɵɵelementStart(8, \"button\", 6);\n    ɵɵlistener(\"click\", function SelectSchemaJsonSchemaComponent_div_24_Template_button_click_8_listener($event) {\n      ɵɵrestoreView(_r27);\n      const ctx_r29 = ɵɵnextContext();\n      return ctx_r29.setArrayType(\"Boolean\", ctx_r29.entity, $event);\n    });\n    ɵɵtext(9, \"Boolean\");\n    ɵɵelementEnd();\n    ɵɵelementStart(10, \"button\", 6);\n    ɵɵlistener(\"click\", function SelectSchemaJsonSchemaComponent_div_24_Template_button_click_10_listener($event) {\n      ɵɵrestoreView(_r27);\n      const ctx_r30 = ɵɵnextContext();\n      return ctx_r30.setArrayType(\"Number\", ctx_r30.entity, $event);\n    });\n    ɵɵtext(11, \"Number\");\n    ɵɵelementEnd();\n    ɵɵtemplate(12, SelectSchemaJsonSchemaComponent_div_24_button_12_Template, 2, 1, \"button\", 5);\n    ɵɵelementStart(13, \"button\", 6);\n    ɵɵlistener(\"click\", function SelectSchemaJsonSchemaComponent_div_24_Template_button_click_13_listener($event) {\n      ɵɵrestoreView(_r27);\n      const ctx_r31 = ɵɵnextContext();\n      return ctx_r31.setArrayType(\"String\", ctx_r31.entity, $event);\n    });\n    ɵɵtext(14, \"String\");\n    ɵɵelementEnd();\n    ɵɵelementStart(15, \"button\", 6);\n    ɵɵlistener(\"click\", function SelectSchemaJsonSchemaComponent_div_24_Template_button_click_15_listener($event) {\n      ɵɵrestoreView(_r27);\n      const ctx_r32 = ɵɵnextContext();\n      return ctx_r32.setArrayType(\"$ref\", ctx_r32.entity, $event);\n    });\n    ɵɵtext(16, \"$ref\");\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = ɵɵnextContext();\n    ɵɵadvance(4);\n    ɵɵproperty(\"ngClass\", ctx_r7.selectedEntity._items[0] && ctx_r7.selectedEntity._items[0]._type[0] ? \"\" : \"t_bg\");\n    ɵɵadvance(2);\n    ɵɵproperty(\"ngClass\", ctx_r7.selectedEntity._items[0] && ctx_r7.selectedEntity._items[0]._type[0] == \"Integer\" ? \"t_bg\" : \"\");\n    ɵɵadvance(2);\n    ɵɵproperty(\"ngClass\", ctx_r7.selectedEntity._items[0] && ctx_r7.selectedEntity._items[0]._type[0] == \"Boolean\" ? \"t_bg\" : \"\");\n    ɵɵadvance(2);\n    ɵɵproperty(\"ngClass\", ctx_r7.selectedEntity._items[0] && ctx_r7.selectedEntity._items[0]._type[0] == \"Number\" ? \"t_bg\" : \"\");\n    ɵɵadvance(2);\n    ɵɵproperty(\"ngIf\", ctx_r7.mode != \"list\");\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngClass\", ctx_r7.selectedEntity._items[0] && ctx_r7.selectedEntity._items[0]._type[0] == \"String\" ? \"t_bg\" : \"\");\n    ɵɵadvance(2);\n    ɵɵproperty(\"ngClass\", ctx_r7.selectedEntity._items[0] && ctx_r7.selectedEntity._items[0]._type[0] == \"$ref\" ? \"t_bg\" : \"\");\n  }\n}\n\nfunction SelectSchemaJsonSchemaComponent_div_25_select_4_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵɵelementStart(0, \"option\", 12);\n    ɵɵtext(1);\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const id_r36 = ctx.$implicit;\n    const ctx_r35 = ɵɵnextContext(3);\n    ɵɵpropertyInterpolate(\"value\", id_r36);\n    ɵɵadvance(1);\n    ɵɵtextInterpolate2(\"#/definitions/\", ctx_r35.models[id_r36].nameSpace, \" (\", ctx_r35.models[id_r36].name, \")\");\n  }\n}\n\nfunction SelectSchemaJsonSchemaComponent_div_25_select_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = ɵɵgetCurrentView();\n\n    ɵɵelementStart(0, \"select\", 10);\n    ɵɵlistener(\"click\", function SelectSchemaJsonSchemaComponent_div_25_select_4_Template_select_click_0_listener($event) {\n      ɵɵrestoreView(_r38);\n      return $event.stopPropagation();\n    })(\"change\", function SelectSchemaJsonSchemaComponent_div_25_select_4_Template_select_change_0_listener() {\n      ɵɵrestoreView(_r38);\n      const ctx_r39 = ɵɵnextContext(2);\n      return ctx_r39.setModelFor$Ref();\n    })(\"ngModelChange\", function SelectSchemaJsonSchemaComponent_div_25_select_4_Template_select_ngModelChange_0_listener($event) {\n      ɵɵrestoreView(_r38);\n      const ctx_r40 = ɵɵnextContext(2);\n      return ctx_r40.modelRef = $event;\n    });\n    ɵɵtemplate(1, SelectSchemaJsonSchemaComponent_div_25_select_4_option_1_Template, 2, 3, \"option\", 11);\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r33 = ɵɵnextContext(2);\n    ɵɵproperty(\"ngModel\", ctx_r33.modelRef);\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngForOf\", ctx_r33.keys(ctx_r33.models));\n  }\n}\n\nfunction SelectSchemaJsonSchemaComponent_div_25_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵɵelementStart(0, \"span\");\n    ɵɵtext(1, \"No models found\");\n    ɵɵelementEnd();\n  }\n}\n\nfunction SelectSchemaJsonSchemaComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵɵelementStart(0, \"div\");\n    ɵɵelementStart(1, \"div\", 1);\n    ɵɵtext(2, \"Select model\");\n    ɵɵelementEnd();\n    ɵɵelementStart(3, \"div\", 8);\n    ɵɵtemplate(4, SelectSchemaJsonSchemaComponent_div_25_select_4_Template, 2, 2, \"select\", 9);\n    ɵɵtemplate(5, SelectSchemaJsonSchemaComponent_div_25_span_5_Template, 2, 0, \"span\", 7);\n    ɵɵelementEnd();\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = ɵɵnextContext();\n    ɵɵadvance(4);\n    ɵɵproperty(\"ngIf\", ctx_r8.models);\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngIf\", !ctx_r8.models);\n  }\n}\n\nlet SelectSchemaJsonSchemaComponent = /*#__PURE__*/(() => {\n  class SelectSchemaJsonSchemaComponent {\n    constructor() {\n      this.JsonSchema = new JsonSchemaService();\n    } // change the model type\n\n\n    changeModelType(type, entity, event) {\n      entity = this.selectedEntity;\n\n      if (event.ctrlKey) {\n        if (entity._type.indexOf(type) >= 0) {\n          // unselect current type\n          if (entity._type.length > 1) {\n            const index = entity._type.indexOf(type);\n\n            entity._type.splice(index, 1);\n\n            this.manageModelProps(type, entity, 'remove');\n          }\n        } else {\n          entity._type.push(type);\n\n          this.manageModelProps(type, entity, 'add');\n        }\n      } else {\n        for (let i = 0; i < entity._type.length; i++) {\n          this.manageModelProps(entity._type[i], entity, 'remove');\n        }\n\n        entity._type = [type];\n        this.manageModelProps(type, entity, 'add');\n      }\n\n      this.modelChangesCallback(entity);\n\n      if (event) {\n        event.stopPropagation();\n      }\n\n      this.refreshSchema(); // if (this.openMenu) {\n      //     this.openMenu();\n      // }\n    }\n\n    manageModelProps(type, entity, action) {\n      let fieldsObj = {};\n      fieldsObj = this.JsonSchema.copy(this.JsonSchema.fields['for' + type]);\n\n      for (const key in fieldsObj) {\n        if (!key) {\n          continue;\n        }\n\n        const val = fieldsObj[key];\n\n        if (action === 'remove') {\n          if (entity.hasOwnProperty(key) && key !== '_type') {\n            console.log('removing: ', key);\n            delete entity[key];\n          }\n        } else if (action === 'add') {\n          if (!entity.hasOwnProperty(key)) {\n            entity[key] = val;\n          }\n        }\n      }\n\n      ;\n    }\n\n    keys(obj) {\n      return Object.keys(obj);\n    }\n\n    setModelFor$Ref() {\n      var selectedEntity = this.configs.extraArrayOptn ? this.selectedEntity._items[0] : this.selectedEntity;\n      var resPath = '#/responses/';\n\n      if (this.modelRef.indexOf(resPath) === 0) {\n        selectedEntity._path = resPath;\n        selectedEntity._value = this.modelRef.substring(resPath.length);\n      } else {\n        selectedEntity._path = '#/definitions/';\n        selectedEntity._value = this.modelRef;\n      }\n\n      this.refreshSchema();\n    }\n\n  }\n\n  SelectSchemaJsonSchemaComponent.ɵfac = function SelectSchemaJsonSchemaComponent_Factory(t) {\n    return new (t || SelectSchemaJsonSchemaComponent)();\n  };\n\n  SelectSchemaJsonSchemaComponent.ɵcmp = ɵɵdefineComponent({\n    type: SelectSchemaJsonSchemaComponent,\n    selectors: [[\"ng-jsonschema-selectschema\"]],\n    inputs: {\n      configs: \"configs\",\n      modelRef: \"modelRef\",\n      modelChangesCallback: \"modelChangesCallback\",\n      refreshSchema: \"refreshSchema\",\n      openMenu: \"openMenu\",\n      selectedEntity: \"selectedEntity\",\n      setArrayType: \"setArrayType\",\n      mode: \"mode\",\n      models: \"models\",\n      entity: \"entity\"\n    },\n    features: [ɵɵProvidersFeature([])],\n    decls: 26,\n    vars: 13,\n    consts: [[1, \"model-type-selector-cont\"], [1, \"title\", \"t_color\"], [1, \"selectmultiple\"], [3, \"click\"], [1, \"model-types\"], [\"type\", \"button\", \"class\", \"btn btn-link btn-sm\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-link\", \"btn-sm\", 3, \"ngClass\", \"click\"], [4, \"ngIf\"], [1, \"array-items\"], [\"class\", \"setmodel\", 3, \"ngModel\", \"click\", \"change\", \"ngModelChange\", 4, \"ngIf\"], [1, \"setmodel\", 3, \"ngModel\", \"click\", \"change\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function SelectSchemaJsonSchemaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵɵelementStart(0, \"div\", 0);\n        ɵɵelementStart(1, \"div\", 1);\n        ɵɵtext(2, \"Model Type \");\n        ɵɵelementStart(3, \"small\");\n        ɵɵtext(4, \"Hold Ctrl key to select multiple\");\n        ɵɵelementEnd();\n        ɵɵelementEnd();\n        ɵɵelementStart(5, \"div\", 2);\n        ɵɵelementStart(6, \"button\", 3);\n        ɵɵlistener(\"click\", function SelectSchemaJsonSchemaComponent_Template_button_click_6_listener() {\n          return ctx.openMenu();\n        });\n        ɵɵtext(7, \"x\");\n        ɵɵelementEnd();\n        ɵɵelementEnd();\n        ɵɵelementStart(8, \"div\", 4);\n        ɵɵtemplate(9, SelectSchemaJsonSchemaComponent_button_9_Template, 2, 1, \"button\", 5);\n        ɵɵelementStart(10, \"button\", 6);\n        ɵɵlistener(\"click\", function SelectSchemaJsonSchemaComponent_Template_button_click_10_listener($event) {\n          return ctx.changeModelType(\"Boolean\", ctx.entity, $event);\n        });\n        ɵɵtext(11, \"Boolean\");\n        ɵɵelementEnd();\n        ɵɵelementStart(12, \"button\", 6);\n        ɵɵlistener(\"click\", function SelectSchemaJsonSchemaComponent_Template_button_click_12_listener($event) {\n          return ctx.changeModelType(\"Integer\", ctx.entity, $event);\n        });\n        ɵɵtext(13, \"Integer\");\n        ɵɵelementEnd();\n        ɵɵelementStart(14, \"button\", 6);\n        ɵɵlistener(\"click\", function SelectSchemaJsonSchemaComponent_Template_button_click_14_listener($event) {\n          return ctx.changeModelType(\"Number\", ctx.entity, $event);\n        });\n        ɵɵtext(15, \"Number\");\n        ɵɵelementEnd();\n        ɵɵtemplate(16, SelectSchemaJsonSchemaComponent_button_16_Template, 2, 1, \"button\", 5);\n        ɵɵtemplate(17, SelectSchemaJsonSchemaComponent_button_17_Template, 2, 1, \"button\", 5);\n        ɵɵelementStart(18, \"button\", 6);\n        ɵɵlistener(\"click\", function SelectSchemaJsonSchemaComponent_Template_button_click_18_listener($event) {\n          return ctx.changeModelType(\"String\", ctx.entity, $event);\n        });\n        ɵɵtext(19, \"String\");\n        ɵɵelementEnd();\n        ɵɵtemplate(20, SelectSchemaJsonSchemaComponent_button_20_Template, 2, 1, \"button\", 5);\n        ɵɵtemplate(21, SelectSchemaJsonSchemaComponent_button_21_Template, 2, 1, \"button\", 5);\n        ɵɵtemplate(22, SelectSchemaJsonSchemaComponent_button_22_Template, 2, 1, \"button\", 5);\n        ɵɵtemplate(23, SelectSchemaJsonSchemaComponent_button_23_Template, 2, 1, \"button\", 5);\n        ɵɵelementEnd();\n        ɵɵtemplate(24, SelectSchemaJsonSchemaComponent_div_24_Template, 17, 7, \"div\", 7);\n        ɵɵtemplate(25, SelectSchemaJsonSchemaComponent_div_25_Template, 6, 2, \"div\", 7);\n        ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵɵadvance(9);\n        ɵɵproperty(\"ngIf\", ctx.mode != \"static\");\n        ɵɵadvance(1);\n        ɵɵproperty(\"ngClass\", ctx.configs.currModelType.indexOf(\"Boolean\") >= 0 ? \"t_bg\" : \"\");\n        ɵɵadvance(2);\n        ɵɵproperty(\"ngClass\", ctx.configs.currModelType.indexOf(\"Integer\") >= 0 ? \"t_bg\" : \"\");\n        ɵɵadvance(2);\n        ɵɵproperty(\"ngClass\", ctx.configs.currModelType.indexOf(\"Number\") >= 0 ? \"t_bg\" : \"\");\n        ɵɵadvance(2);\n        ɵɵproperty(\"ngIf\", ctx.mode != \"list\" && ctx.mode != \"static\");\n        ɵɵadvance(1);\n        ɵɵproperty(\"ngIf\", ctx.mode != \"list\" && ctx.mode != \"static\");\n        ɵɵadvance(1);\n        ɵɵproperty(\"ngClass\", ctx.configs.currModelType.indexOf(\"String\") >= 0 ? \"t_bg\" : \"\");\n        ɵɵadvance(2);\n        ɵɵproperty(\"ngIf\", ctx.mode != \"list\" && ctx.mode != \"static\");\n        ɵɵadvance(1);\n        ɵɵproperty(\"ngIf\", ctx.mode != \"list\" && ctx.mode != \"static\");\n        ɵɵadvance(1);\n        ɵɵproperty(\"ngIf\", ctx.mode != \"list\" && ctx.mode != \"static\");\n        ɵɵadvance(1);\n        ɵɵproperty(\"ngIf\", ctx.mode != \"list\" && ctx.mode != \"static\");\n        ɵɵadvance(1);\n        ɵɵproperty(\"ngIf\", ctx.configs.showMoreOptn == \"array\");\n        ɵɵadvance(1);\n        ɵɵproperty(\"ngIf\", ctx.configs.showMoreOptn == \"$ref\" || ctx.configs.extraArrayOptn);\n      }\n    },\n    directives: [NgIf, NgClass, SelectControlValueAccessor, NgControlStatus, NgModel, NgForOf, NgSelectOption, ɵangular_packages_forms_forms_x],\n    encapsulation: 2\n  });\n  /*@__PURE__*/\n\n  return SelectSchemaJsonSchemaComponent;\n})();\n\n(function () {\n  void 0;\n})();\n\nfunction JsonSchemaComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵɵelementStart(0, \"div\", 12);\n    ɵɵelement(1, \"ng-jsonschema-selectschema\", 13);\n    ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵɵnextContext();\n    ɵɵadvance(1);\n    ɵɵproperty(\"refreshSchema\", ctx_r0.refreshSchema.bind(ctx_r0))(\"selectedEntity\", ctx_r0.selectedEntity)(\"openMenu\", ctx_r0.toggleSelectorModal.bind(ctx_r0))(\"models\", ctx_r0.models)(\"setArrayType\", ctx_r0.setArrayType.bind(ctx_r0))(\"modelChangesCallback\", ctx_r0.modelChangesCallback.bind(ctx_r0))(\"modelRef\", ctx_r0.modelRef)(\"configs\", ctx_r0.configs);\n  }\n}\n\nlet JsonSchemaComponent = /*#__PURE__*/(() => {\n  class JsonSchemaComponent {\n    constructor(state) {\n      this.state = state; // public editorOptions: JsonEditorOptions;\n      // @ViewChild(JsonEditorComponent) editor: JsonEditorComponent; // , { static: true }\n\n      this.schema = null;\n      this.models = [];\n\n      this.propagateChange = () => {};\n\n      this.propagateTouch = () => {};\n\n      this.showSelectorModal = false;\n      this.showAddModelForm = false;\n      this.configs = {\n        showMoreOptn: '',\n        currModelType: [],\n        extraArrayOptn: '',\n        menuOpen: true\n      };\n      this.modelRef = '';\n      this.JsonSchema = new JsonSchemaService();\n      this.hasChild = ['Object', 'OneOf', 'AllOf', 'AnyOf'];\n      this.singleChild = ['OneOf', 'AllOf', 'AnyOf']; // this.editorOptions = new JsonEditorOptions() // this.options.mode = 'code'; //set only one mode\n      // this.editorOptions.modes = ['code', 'text', 'tree', 'view']; // set all allowed modes\n\n      this.state.getState().subscribe(res => {\n        this.showSelectorModal = res.showSelectorModal;\n      }, err => {\n        console.error(`An error occurred: ${err.message}`);\n      });\n    }\n\n    writeValue(value) {\n      if (value !== undefined) {\n        this.schema = value;\n        this.initRootElement(this.schema);\n      }\n    }\n\n    registerOnChange(fn) {\n      this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this.propagateTouch = fn;\n    }\n\n    setDisabledState(isDisabled) {\n      alert('disable');\n    }\n\n    ngOnInit() {\n      if (!this.schema) {\n        this.schema = {\n          type: 'object'\n        };\n        this.initRootElement(this.schema);\n      }\n    }\n\n    refreshSchema() {\n      setTimeout(() => {\n        console.log('Updating ng-model.', this.models);\n        this.schema = this.JsonSchema.obj2schema(this.entity, this.models);\n        this.propagateChange(this.schema);\n      });\n    }\n\n    str(data) {\n      return JSON.stringify(data, function (k, v) {\n        if (v === undefined) {\n          return null;\n        }\n\n        return v;\n      }, '     ');\n    }\n\n    initRootElement(schema) {\n      //  initialize the root\n      this.mode = this.mode ? this.mode : 'object';\n\n      if (schema) {\n        this.entity = this.JsonSchema.schema2obj(schema, undefined, undefined, true, this.models, undefined);\n        this.entity.root$$ = true; //TODO: check if this is required\n        // this.JsonSchema.MODELS._id_ = this.getLastModelId(this.entity, 0);\n\n        return;\n      }\n\n      this.entity = this.JsonSchema.newObject('##ROOT##', null, '$response');\n      this.entity.root$$ = true;\n    } //  generates a model based on the type and key\n\n\n    generateModel(type, key) {\n      let newModel;\n\n      switch (type) {\n        case 'Array':\n          newModel = this.JsonSchema.newArray(key);\n          break;\n\n        case 'Boolean':\n          newModel = this.JsonSchema.newBoolean(key);\n          break;\n\n        case 'Integer':\n          newModel = this.JsonSchema.newInteger(key);\n          break;\n\n        case 'Number':\n          newModel = this.JsonSchema.newNumber(key);\n          break;\n\n        case 'Null':\n          newModel = this.JsonSchema.newNull(key);\n          break;\n\n        case 'Object':\n          newModel = this.JsonSchema.newObject(key);\n          break;\n\n        case 'String':\n          newModel = this.JsonSchema.newString(key);\n          break;\n\n        case '$ref':\n          newModel = this.JsonSchema.new$ref(key);\n          break;\n\n        case 'OneOf':\n        case 'AnyOf':\n        case 'AllOf':\n          newModel = this.JsonSchema.newXOf(type, key);\n      }\n\n      return newModel;\n    } // recursively fine the parent and add the entity\n\n\n    addNewProp(entity, e) {\n      var addTo = 'Object';\n\n      if (entity._type.indexOf('Object') >= 0) {\n        addTo = 'Object';\n      } else if (this.singleChild.indexOf(entity._type[0]) >= 0) {\n        //as oneOf,allOf,anyOf are single select, entity._type is array of 1\n        addTo = 'XOf';\n      } else if (entity._items[0] && this.hasChild.indexOf(entity._items[0]._type[0]) >= 0) {\n        addTo = 'Array';\n      } // this.$dirty = true;\n\n\n      switch (addTo) {\n        case 'Object':\n          var apic = this.JsonSchema.newString('', false, entity._parent + '.' + entity._key.replace('##ROOT##', 'data'));\n\n          entity._properties.push(apic); // $timeout(function () {\n          //     angular.element(e.currentTarget).parents('.objCont').find('.propCont').last().find('.model-key').focus();\n          // });\n\n\n          break;\n\n        case 'Array':\n          this.addNewPropArrObj(entity, entity._items[0]._type[0], e);\n          break;\n\n        case 'XOf':\n          var apic = this.JsonSchema.newString('', false, entity._parent + '.' + entity._key.replace('##ROOT##', 'data'));\n          apic._hideKey = true;\n\n          entity._properties.push(apic);\n\n          break;\n        // $timeout(function () {\n        //     angular.element(e.currentTarget).parents('.objCont').find('.propCont').last().find('.model-key').focus();\n        // });\n      }\n\n      this.refreshSchema();\n    } // Add property when array type is Object\n\n\n    addNewPropArrObj(entity, addTo, e) {\n      // this.$dirty = true;\n      if (!entity._items) {\n        return;\n      }\n\n      var apic = this.JsonSchema.newString('', false, entity._parent + '.' + entity._key.replace('##ROOT##', 'data') + '[0]');\n\n      if (this.singleChild.indexOf(addTo) >= 0) {\n        apic._hideKey = true;\n      }\n\n      entity._items[0]._properties.push(apic); // $timeout(function () {\n      //     angular.element(e.currentTarget).parents('.objCont').find('.propCont').last().find('.model-key').focus();\n      // });\n\n    } // callback after the model changed\n\n\n    modelChangesCallback(entity) {\n      this.configs.currModelType = entity._type;\n      this.selectedEntity = entity;\n\n      if (entity._type.indexOf('Array') >= 0) {\n        this.configs.showMoreOptn = 'array';\n\n        if (entity._type.indexOf('$ref') >= 0) {\n          this.configs.showMoreOptn = 'Array$ref';\n          this.modelRef = '';\n        }\n      } else if (entity._type.indexOf('$ref') >= 0) {\n        this.configs.showMoreOptn = '$ref';\n        this.modelRef = '';\n      } else {\n        this.configs.showMoreOptn = '';\n      }\n\n      this.configs.extraArrayOptn = false;\n    }\n\n    setArrayType(type, entity, e) {\n      var newM = this.generateModel(type, 'arrayEle');\n      entity = this.selectedEntity;\n      entity._items[0] = newM;\n\n      if (type === '$ref') {\n        this.configs.extraArrayOptn = true;\n        this.modelRef = '';\n      } else {\n        this.configs.extraArrayOptn = false;\n      }\n\n      e.stopPropagation();\n      this.refreshSchema();\n    } //Defined in selectschema.component\n    // setModelFor$Ref() {\n    //     if (this.configs.extraArrayOptn) {\n    //         this.selectedEntity._items[0]._value = this.modelRef.model;\n    //         console.log(this.selectedEntity);\n    //     } else {\n    //         this.selectedEntity._value = this.modelRef.model;\n    //     }\n    // }\n\n\n    removeEntity(entity) {\n      const res = this.removeModel(this.entity, entity.__ID__);\n\n      if (res !== undefined) {\n        // this.data._properties.splice(res, 1);\n        this.entity._properties.splice(res, 1);\n      }\n\n      this.refreshSchema();\n    }\n\n    removeModel(data, id, i = null) {\n      // this.$dirty = true;\n      if (data.__ID__ === id) return i;\n      var res;\n\n      for (var j = 0; j < data._type.length; j++) {\n        var type = data._type[j];\n\n        switch (type) {\n          case 'Object':\n          case 'OneOf':\n          case 'AnyOf':\n          case 'AllOf':\n            for (var j = 0; j < data._properties.length; j++) {\n              var val = data._properties[j];\n              res = this.removeModel(val, id, j);\n\n              if (res !== undefined) {\n                data._properties.splice(j, 1);\n              }\n            }\n\n            break;\n\n          case 'Array':\n            if (data._items[0] && data._items[0]._properties) {\n              for (var k = 0; k < data._items[0]._properties.length; k++) {\n                var val = data._items[0]._properties[k];\n                res = this.removeModel(val, id, k);\n\n                if (res !== undefined) {\n                  data._items[0]._properties.splice(k, 1);\n                }\n              }\n            }\n\n            break;\n        }\n      }\n    }\n\n    convertObj2Schema() {\n      console.log('convertObj2Schema');\n      const schema = this.JsonSchema.obj2schema(this.entity, this.models);\n      console.log(this.entity);\n      this.schema = {\n        json: schema,\n        text: JSON.stringify(schema, null, '    '),\n        dup: JSON.stringify(schema, null, '    ')\n      };\n    }\n\n    convertSchema2Obj() {\n      console.log('convertSchema2Obj');\n\n      if (this.schema && this.schema.original !== this.schema.dup) {\n        this.entity = this.JsonSchema.schema2obj(this.schema.json, undefined, undefined, true, this.models, undefined);\n      }\n    } // $watch(function() {\n    //     return this.$data;\n    // }, function() {\n    //     initRootElement();\n    // });\n\n\n    getLastModelId(data, lastId) {\n      var id = data.__ID__;\n      var idNum = parseInt(id.substring(6, id.length));\n      if (idNum >= lastId) lastId = idNum;\n\n      switch (data._type) {\n        case 'Object':\n          for (var i = 0; i < data._properties.length; i++) {\n            var val = data._properties[i];\n\n            if (typeof val === 'object' && val.__ID__) {\n              lastId = this.getLastModelId(val, lastId);\n            }\n          }\n\n          break;\n\n        case 'Array':\n          if (data._items[0] && data._items[0]._properties) {\n            for (var i = 0; i < data._items[0]._properties.length; i++) {\n              var val = data._items[0]._properties[i];\n\n              if (typeof val === 'object' && val.__ID__) {\n                lastId = this.getLastModelId(val, lastId);\n              }\n            }\n          } else if (data._items[0]) {\n            lastId = this.getLastModelId(data._items[0], lastId);\n          }\n\n          break;\n      }\n\n      return lastId;\n    }\n\n    toggleSelectorModal(entity = null, e = null) {\n      if (entity) {\n        this.modelChangesCallback(entity);\n      }\n\n      this.state.setSelectorModel(!this.showSelectorModal);\n    }\n\n    downloadJSON() {\n      const filename = 'schema.json';\n      const text = this.str(this.schema);\n      this.download(filename, text);\n    }\n\n    download(filename, text) {\n      const element = document.createElement('a');\n      element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n      element.setAttribute('download', filename);\n      element.style.display = 'none';\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n    }\n\n    tabChange(tab) {\n      switch (tab.index) {\n        case 0:\n          this.convertSchema2Obj();\n          break;\n\n        case 1:\n          this.convertObj2Schema();\n          break;\n      }\n    }\n\n  }\n\n  JsonSchemaComponent.ɵfac = function JsonSchemaComponent_Factory(t) {\n    return new (t || JsonSchemaComponent)(ɵɵdirectiveInject(StateService));\n  };\n\n  JsonSchemaComponent.ɵcmp = ɵɵdefineComponent({\n    type: JsonSchemaComponent,\n    selectors: [[\"ng-jsonschema\"]],\n    inputs: {\n      schema: \"schema\",\n      models: \"models\"\n    },\n    features: [ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => JsonSchemaComponent),\n      multi: true\n    }])],\n    decls: 19,\n    vars: 11,\n    consts: [[1, \"json-schema\"], [\"animationDuration\", \"0ms\", 3, \"selectedTabChange\"], [\"label\", \"Designer\", 3, \"click\"], [\"index\", \"0\", \"heading\", \"Designer\"], [3, \"disabled\"], [1, \"main\"], [3, \"refreshSchema\", \"models\", \"addNewProp\", \"removeEntity\", \"openMenu\", \"entity\"], [\"class\", \"model-type-selector\", \"id\", \"model-type-selector\", 4, \"ngIf\"], [\"label\", \"Json Schema\", 3, \"click\"], [1, \"tab-action\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Download\", 3, \"click\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Copy\"], [\"id\", \"model-type-selector\", 1, \"model-type-selector\"], [3, \"refreshSchema\", \"selectedEntity\", \"openMenu\", \"models\", \"setArrayType\", \"modelChangesCallback\", \"modelRef\", \"configs\"]],\n    template: function JsonSchemaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵɵelementStart(0, \"section\", 0);\n        ɵɵelementStart(1, \"mat-tab-group\", 1);\n        ɵɵlistener(\"selectedTabChange\", function JsonSchemaComponent_Template_mat_tab_group_selectedTabChange_1_listener($event) {\n          return ctx.tabChange($event);\n        });\n        ɵɵelementStart(2, \"mat-tab\", 2);\n        ɵɵlistener(\"click\", function JsonSchemaComponent_Template_mat_tab_click_2_listener() {\n          return ctx.convertSchema2Obj();\n        });\n        ɵɵelementStart(3, \"div\", 3);\n        ɵɵelementStart(4, \"div\");\n        ɵɵelementStart(5, \"fieldset\", 4);\n        ɵɵelementStart(6, \"div\", 5);\n        ɵɵelement(7, \"ng-jsonschema-main\", 6);\n        ɵɵelementEnd();\n        ɵɵtemplate(8, JsonSchemaComponent_div_8_Template, 2, 8, \"div\", 7);\n        ɵɵelementEnd();\n        ɵɵelementEnd();\n        ɵɵelementEnd();\n        ɵɵelementEnd();\n        ɵɵelementStart(9, \"mat-tab\", 8);\n        ɵɵlistener(\"click\", function JsonSchemaComponent_Template_mat_tab_click_9_listener() {\n          return ctx.convertObj2Schema();\n        });\n        ɵɵtext(10);\n        ɵɵpipe(11, \"json\");\n        ɵɵelementEnd();\n        ɵɵelementEnd();\n        ɵɵelementStart(12, \"div\", 9);\n        ɵɵelementStart(13, \"button\", 10);\n        ɵɵlistener(\"click\", function JsonSchemaComponent_Template_button_click_13_listener() {\n          return ctx.downloadJSON();\n        });\n        ɵɵelementStart(14, \"mat-icon\");\n        ɵɵtext(15, \"vertical_align_bottom\");\n        ɵɵelementEnd();\n        ɵɵelementEnd();\n        ɵɵelementStart(16, \"button\", 11);\n        ɵɵelementStart(17, \"mat-icon\");\n        ɵɵtext(18, \"file_copy\");\n        ɵɵelementEnd();\n        ɵɵelementEnd();\n        ɵɵelementEnd();\n        ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵɵadvance(5);\n        ɵɵproperty(\"disabled\", ctx.readonly);\n        ɵɵadvance(2);\n        ɵɵproperty(\"refreshSchema\", ctx.refreshSchema.bind(ctx))(\"models\", ctx.models)(\"addNewProp\", ctx.addNewProp.bind(ctx))(\"removeEntity\", ctx.removeEntity.bind(ctx))(\"openMenu\", ctx.toggleSelectorModal.bind(ctx))(\"entity\", ctx.entity);\n        ɵɵadvance(1);\n        ɵɵproperty(\"ngIf\", ctx.showSelectorModal);\n        ɵɵadvance(2);\n        ɵɵtextInterpolate1(\" \", ɵɵpipeBind1(11, 9, ctx.schema), \" \");\n      }\n    },\n    directives: [MatTabGroup, MatTab, MainJsonSchemaComponent, NgIf, MatButton, MatIcon, SelectSchemaJsonSchemaComponent],\n    pipes: [JsonPipe],\n    styles: [\"input[type=checkbox].small:after{width:12px;height:12px;margin-top:-15px}input[type=checkbox].small:checked:before{top:-14px;left:3px;width:6px;height:8px}.json-schema pre{line-height:15px;margin:5px 5px 5px 20px}.json-schema .copy{font-size:18px;font-weight:700;position:absolute;top:7px;right:12px;z-index:20}.json-schema .ace_editor{height:250px}.model-type-selector{top:20%;left:20%;width:400px;padding:10px;position:fixed;text-align:left;background-color:#fff;border-radius:3px;box-shadow:0 1px 4px rgba(0,0,0,.3);z-index:4}.faint{color:#9e9e9e;font-size:12px}.json-schema .nav>li>a{padding:5px 15px}.json-schema .main{background:#fff;padding:5px 10px;border:1px dashed #eee;margin:5px 0}.json-schema .nav.nav-tabs{height:33px}.json-schema .tab-content>.tab-pane{position:relative}.model-type-selector-cont .model-edit-x{font-family:apic-font;font-weight:700;position:absolute;right:8px;top:3px;font-size:13px;cursor:pointer}.model-type-selector-cont .title{font-size:16px;font-family:apic-font;font-weight:700;border-bottom:1px solid rgba(0,0,0,.3)}.array-items,.model-types{padding:5px 0}.model-types .btn.btn-link{font-size:14px;margin:2px 3px;padding:4px 10px 3px}.model-types .btn.btn-link.t_bg{color:red;border:1px solid red}input.model-key{font-size:14px;font-family:apic-font;height:20px;width:110px;box-shadow:none;border:1px solid rgba(0,0,0,.05);padding:0 5px;margin-right:5px}.t_bg input.model-key{color:#666}input.model-key:active,input.model-key:focus{box-shadow:0 0 8px rgba(0,0,0,.1) inset;outline:0}input.model-key:hover{border:1px solid rgba(0,0,0,.2)}input.model-key[readonly]{background:#eee}.js-row.t_bg .btn.model-selector{background:#fff}.btn.model-selector .caret{display:none}.btn.model-selector:hover .caret{display:inline-block}.objCont{margin-left:20px;position:relative}.objProps{border-left:0 solid rgba(0,0,0,.2)}.js-row{padding:4px 15px 3px;position:relative}.js-row:hover{background:#eceff1}.js-row:hover .obj-add{background:#fff}button.obj-add{position:absolute;left:-30px;top:-5px}.obj-exp{position:absolute;left:2px;top:8px;font-size:12px;cursor:pointer}.js-row .model-remove{color:#bdbdbd;cursor:pointer;position:absolute;right:3px;top:5px;width:18px;height:18px;text-align:center;line-height:13px;border-radius:50%;font-size:12px;display:block;background:#fff;border:none;padding:0}.js-row:hover .model-remove{color:red}.js-row .model-detail{color:#bdbdbd;cursor:pointer;position:absolute;right:25px;top:3px;width:20px;height:20px;text-align:center;line-height:23px;font-size:15px}.js-row:hover .model-detail{color:#2093ef;opacity:1}.js-row .model-done{color:#2093ef;cursor:pointer;position:absolute;right:25px;top:3px;text-align:center;font-size:15px;background:#f5f5f5;height:24px;width:26px}.js-row .model-summary{position:absolute;top:2px;right:50px;min-width:5px;min-height:5px}.js-row.t_bg .model-summary{color:#fff}.js-row .model-summary>span{margin-right:10px;vertical-align:text-bottom}.js-row .model-summary .ico{font-size:22px}.Array{color:#009688!important}.Boolean{color:#ff9800!important}.Integer,.Number{color:#e91e63!important}.Null{color:#f44336!important}.String{color:#9c27b0!important}.Object{color:#2196f3!important}fieldset{border:none;padding:0}.unspecified{color:#9e9e9e}button.model-selector{font-family:apic-font;line-height:20px;padding:0 15px}.model-det-cont{background:#f5f5f5;overflow:auto;padding:5px;box-shadow:2px 2px 3px rgba(0,0,0,.2);margin-bottom:5px}form.model-detail-form .control-label{padding:0 5px;font-size:12px;margin-bottom:0}form.model-detail-form .detail-ip{font-size:12px;font-family:apic-font;background-color:#fff;padding:0 0 0 5px;height:22px}form.model-detail-form select.detail-ip{padding-right:20px}form.model-detail-form textarea{font-size:13px;font-family:apic-font;background:#fff;padding:0 5px}form.model-detail-form textarea.detail-ip{min-height:80px;width:100%}label.model-label-x{width:90px}.form-compact.model-detail-form .form-group{margin-bottom:5px}.checkbox.padding{padding:2px 0}.selectmultiple{float:right;font-size:12px;margin-top:-20px}.setmodel{height:24px}.displaynone{display:none}.model-det-child{border-right:1px solid #9e9e9e}.model-det-child .t_color{margin-left:-10px}.col-xs-6{width:45%;float:left}.tab-action{position:absolute;z-index:1;top:3px;right:10px}\"],\n    encapsulation: 2\n  });\n  /*@__PURE__*/\n\n  return JsonSchemaComponent;\n})();\n\n(function () {\n  void 0;\n})();\n\nconst CustomDirectives = [JsonSchemaComponent, MainJsonSchemaComponent, FieldJsonSchemaComponent, SelectSchemaJsonSchemaComponent];\nconst NgBrDirectives = {\n  JsonSchemaComponent,\n  MainJsonSchemaComponent,\n  FieldJsonSchemaComponent,\n  SelectSchemaJsonSchemaComponent\n};\nlet NgJsonSchemaBuilder = /*#__PURE__*/(() => {\n  class NgJsonSchemaBuilder {\n    static forRoot() {\n      return {\n        ngModule: NgJsonSchemaBuilder\n      };\n    }\n\n  }\n\n  NgJsonSchemaBuilder.ɵmod = ɵɵdefineNgModule({\n    type: NgJsonSchemaBuilder\n  });\n  NgJsonSchemaBuilder.ɵinj = ɵɵdefineInjector({\n    factory: function NgJsonSchemaBuilder_Factory(t) {\n      return new (t || NgJsonSchemaBuilder)();\n    },\n    providers: [StateService, {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => JsonSchemaComponent),\n      multi: true\n    }],\n    imports: [[CommonModule, BrowserModule, FormsModule, MatTabsModule, MatIconModule, MatButtonModule]]\n  });\n  return NgJsonSchemaBuilder;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵɵsetNgModuleScope(NgJsonSchemaBuilder, {\n    declarations: [JsonSchemaComponent, MainJsonSchemaComponent, FieldJsonSchemaComponent, SelectSchemaJsonSchemaComponent],\n    imports: [CommonModule, BrowserModule, FormsModule, MatTabsModule, MatIconModule, MatButtonModule],\n    exports: [JsonSchemaComponent, MainJsonSchemaComponent, FieldJsonSchemaComponent, SelectSchemaJsonSchemaComponent]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  void 0;\n})();\n/*\r\n * Public API Surface of ng-json-schema-builder\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { CustomDirectives, FieldJsonSchemaComponent, JsonSchemaComponent, MainJsonSchemaComponent, NgBrDirectives, NgJsonSchemaBuilder, SelectSchemaJsonSchemaComponent }; //# sourceMappingURL=ng-json-schema-builder.js.map","map":null,"metadata":{},"sourceType":"module"}